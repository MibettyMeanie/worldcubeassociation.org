{"ast":null,"code":"import React from 'react';\nimport useLoadedData from \"./useLoadedData\";\nimport { groupTypes } from \"../wca-data.js.erb\";\nimport { apiV0Urls } from \"../requests/routes.js.erb\";\nexport default function useLoggedInUserPermissions() {\n  // FIXME: We won't be knowing whether the user is logged in or not. If the user is not logged in,\n  // this will throw and error and even display the error in browser console, which won't be good.\n  // THere are two possible solutions for this in long term:\n  // 1. Handle the error when migrating from useLoadedData to react-query.\n  // 2. Once we are in react-only environment, we can have a global state which will tell us whether\n  // the user is logged in or not. But at that time, we won't even need this hook, as the\n  // permissions can be fetched just once and stored in global state.\n  var _useLoadedData = useLoadedData(apiV0Urls.users.me.permissions),\n    data = _useLoadedData.data,\n    loading = _useLoadedData.loading;\n  var loggedInUserPermissions = React.useMemo(function () {\n    return {\n      canViewDelegateAdminPage: Boolean((data === null || data === void 0 ? void 0 : data.can_view_delegate_admin_page.scope) === '*'),\n      canEditRole: function canEditRole(role) {\n        var roleGroupType = role.group.group_type;\n        var roleGroupId = role.group.id;\n        switch (roleGroupType) {\n          case groupTypes.delegate_regions:\n            return Boolean((data === null || data === void 0 ? void 0 : data.can_edit_groups.scope) === '*' || (data === null || data === void 0 ? void 0 : data.can_edit_groups.scope.some(function (groupId) {\n              return groupId === roleGroupId;\n            })));\n          case groupTypes.teams_committees:\n            return Boolean((data === null || data === void 0 ? void 0 : data.can_edit_teams_committees.scope) === '*' || (data === null || data === void 0 ? void 0 : data.can_edit_teams_committees.scope.some(function (groupId) {\n              return groupId === roleGroupId;\n            })));\n          case groupTypes.translators:\n            return Boolean((data === null || data === void 0 ? void 0 : data.can_edit_translators.scope) === '*');\n          default:\n            return false;\n        }\n      },\n      canAccessWfcSeniorMatters: Boolean((data === null || data === void 0 ? void 0 : data.can_access_wfc_senior_matters.scope) === '*')\n    };\n  }, [data]);\n  return {\n    loggedInUserPermissions: loggedInUserPermissions,\n    loading: loading\n  };\n}","map":{"version":3,"names":["React","useLoadedData","groupTypes","apiV0Urls","useLoggedInUserPermissions","_useLoadedData","users","me","permissions","data","loading","loggedInUserPermissions","useMemo","canViewDelegateAdminPage","Boolean","can_view_delegate_admin_page","scope","canEditRole","role","roleGroupType","group","group_type","roleGroupId","id","delegate_regions","can_edit_groups","some","groupId","teams_committees","can_edit_teams_committees","translators","can_edit_translators","canAccessWfcSeniorMatters","can_access_wfc_senior_matters"],"sources":["/app/WcaOnRails/app/webpacker/lib/hooks/useLoggedInUserPermissions.js"],"sourcesContent":["import React from 'react';\nimport useLoadedData from './useLoadedData';\nimport { groupTypes } from '../wca-data.js.erb';\nimport { apiV0Urls } from '../requests/routes.js.erb';\n\nexport default function useLoggedInUserPermissions() {\n  // FIXME: We won't be knowing whether the user is logged in or not. If the user is not logged in,\n  // this will throw and error and even display the error in browser console, which won't be good.\n  // THere are two possible solutions for this in long term:\n  // 1. Handle the error when migrating from useLoadedData to react-query.\n  // 2. Once we are in react-only environment, we can have a global state which will tell us whether\n  // the user is logged in or not. But at that time, we won't even need this hook, as the\n  // permissions can be fetched just once and stored in global state.\n  const { data, loading } = useLoadedData(apiV0Urls.users.me.permissions);\n\n  const loggedInUserPermissions = React.useMemo(() => ({\n    canViewDelegateAdminPage: Boolean(data?.can_view_delegate_admin_page.scope === '*'),\n    canEditRole: (role) => {\n      const roleGroupType = role.group.group_type;\n      const roleGroupId = role.group.id;\n\n      switch (roleGroupType) {\n        case groupTypes.delegate_regions:\n          return Boolean(data?.can_edit_groups.scope === '*' || data?.can_edit_groups.scope.some((groupId) => groupId === roleGroupId));\n        case groupTypes.teams_committees:\n          return Boolean(data?.can_edit_teams_committees.scope === '*' || data?.can_edit_teams_committees.scope.some((groupId) => groupId === roleGroupId));\n        case groupTypes.translators:\n          return Boolean(data?.can_edit_translators.scope === '*');\n        default:\n          return false;\n      }\n    },\n    canAccessWfcSeniorMatters: Boolean(data?.can_access_wfc_senior_matters.scope === '*'),\n  }), [data]);\n\n  return { loggedInUserPermissions, loading };\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa;AACpB,SAASC,UAAU;AACnB,SAASC,SAAS;AAElB,eAAe,SAASC,0BAA0BA,CAAA,EAAG;EACnD;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAAC,cAAA,GAA0BJ,aAAa,CAACE,SAAS,CAACG,KAAK,CAACC,EAAE,CAACC,WAAW,CAAC;IAA/DC,IAAI,GAAAJ,cAAA,CAAJI,IAAI;IAAEC,OAAO,GAAAL,cAAA,CAAPK,OAAO;EAErB,IAAMC,uBAAuB,GAAGX,KAAK,CAACY,OAAO,CAAC;IAAA,OAAO;MACnDC,wBAAwB,EAAEC,OAAO,CAAC,CAAAL,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEM,4BAA4B,CAACC,KAAK,MAAK,GAAG,CAAC;MACnFC,WAAW,EAAE,SAAAA,YAACC,IAAI,EAAK;QACrB,IAAMC,aAAa,GAAGD,IAAI,CAACE,KAAK,CAACC,UAAU;QAC3C,IAAMC,WAAW,GAAGJ,IAAI,CAACE,KAAK,CAACG,EAAE;QAEjC,QAAQJ,aAAa;UACnB,KAAKjB,UAAU,CAACsB,gBAAgB;YAC9B,OAAOV,OAAO,CAAC,CAAAL,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEgB,eAAe,CAACT,KAAK,MAAK,GAAG,KAAIP,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEgB,eAAe,CAACT,KAAK,CAACU,IAAI,CAAC,UAACC,OAAO;cAAA,OAAKA,OAAO,KAAKL,WAAW;YAAA,EAAC,EAAC;UAC/H,KAAKpB,UAAU,CAAC0B,gBAAgB;YAC9B,OAAOd,OAAO,CAAC,CAAAL,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEoB,yBAAyB,CAACb,KAAK,MAAK,GAAG,KAAIP,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEoB,yBAAyB,CAACb,KAAK,CAACU,IAAI,CAAC,UAACC,OAAO;cAAA,OAAKA,OAAO,KAAKL,WAAW;YAAA,EAAC,EAAC;UACnJ,KAAKpB,UAAU,CAAC4B,WAAW;YACzB,OAAOhB,OAAO,CAAC,CAAAL,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEsB,oBAAoB,CAACf,KAAK,MAAK,GAAG,CAAC;UAC1D;YACE,OAAO,KAAK;QAChB;MACF,CAAC;MACDgB,yBAAyB,EAAElB,OAAO,CAAC,CAAAL,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEwB,6BAA6B,CAACjB,KAAK,MAAK,GAAG;IACtF,CAAC;EAAA,CAAC,EAAE,CAACP,IAAI,CAAC,CAAC;EAEX,OAAO;IAAEE,uBAAuB,EAAvBA,uBAAuB;IAAED,OAAO,EAAPA;EAAQ,CAAC;AAC7C"},"metadata":{},"sourceType":"module","externalDependencies":[]}