{"ast":null,"code":"import _map from \"lodash/map\";\nimport _max from \"lodash/max\";\nimport _flatMap from \"lodash/flatMap\";\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nimport { parseActivityCode } from \"./wcif\";\nexport function toMicrodegrees(coord) {\n  return Math.trunc(parseFloat(coord) * 1e6);\n}\nexport function toDegrees(coord) {\n  return coord / 1e6;\n}\nvar currentElementsIds = {\n  venue: 0,\n  room: 0,\n  activity: 0\n};\nfunction withNestedActivities(activities) {\n  if (activities.length === 0) return [];\n  return [].concat(_toConsumableArray(activities), _toConsumableArray(withNestedActivities(_flatMap(activities, 'childActivities'))));\n}\nexport function initElementsIds(venues) {\n  // Explore the WCIF to get the highest ids.\n  var maxId = function maxId(objects) {\n    return _max(_map(objects, 'id')) || 0;\n  };\n  var rooms = _flatMap(venues, 'rooms');\n  var activities = _flatMap(rooms, function (room) {\n    return withNestedActivities(room.activities);\n  });\n  currentElementsIds.venue = maxId(venues);\n  currentElementsIds.room = maxId(rooms);\n  currentElementsIds.activity = maxId(activities);\n}\nexport function newVenueId() {\n  currentElementsIds.venue += 1;\n  return currentElementsIds.venue;\n}\nexport function newRoomId() {\n  currentElementsIds.room += 1;\n  return currentElementsIds.room;\n}\nexport function newActivityId() {\n  currentElementsIds.activity += 1;\n  return currentElementsIds.activity;\n}\nexport function convertVenueActivitiesToVenueTimezone(oldTZ, venueWcif) {\n  // Called when a venue's timezone has been updated, to update all the activities times.\n  // The WCA website expose times in UTC, so we need to do two steps:\n  //   - first, express each activity times in the old venue's timezone\n  //   - second, change the timezone without changing the actual time figure\n  //   (eg: 4pm stays 4pm, but in a different timezone).\n  var newTZ = venueWcif.timezone;\n  venueWcif.rooms.forEach(function (room) {\n    withNestedActivities(room.activities).forEach(function (activity) {\n      // Undocumented \"keepTime\" parameter, see here:\n      // https://stackoverflow.com/questions/28593304/same-date-in-different-time-zone/28615654#28615654\n      // This enables us to change the UTC offset without changing\n      // the *actual* time of the activity!\n      // NOTE: we intentionally modify the object referenced by activity.\n      /* eslint-disable-next-line */\n      activity.startTime = window.moment(activity.startTime).tz(oldTZ).tz(newTZ, true).format();\n      /* eslint-disable-next-line */\n      activity.endTime = window.moment(activity.endTime).tz(oldTZ).tz(newTZ, true).format();\n    });\n  });\n}\nexport function defaultDurationFromActivityCode(activityCode) {\n  var _parseActivityCode = parseActivityCode(activityCode),\n    eventId = _parseActivityCode.eventId;\n  if (eventId === '333fm' || eventId === '333mbf' || activityCode === 'other-lunch' || activityCode === 'other-awards') {\n    return 60;\n  }\n  return 30;\n}","map":{"version":3,"names":["parseActivityCode","toMicrodegrees","coord","Math","trunc","parseFloat","toDegrees","currentElementsIds","venue","room","activity","withNestedActivities","activities","length","concat","_toConsumableArray","_flatMap","initElementsIds","venues","maxId","objects","_max","_map","rooms","newVenueId","newRoomId","newActivityId","convertVenueActivitiesToVenueTimezone","oldTZ","venueWcif","newTZ","timezone","forEach","startTime","window","moment","tz","format","endTime","defaultDurationFromActivityCode","activityCode","_parseActivityCode","eventId"],"sources":["/app/WcaOnRails/app/webpacker/lib/utils/edit-schedule.js"],"sourcesContent":["import _ from 'lodash';\nimport { parseActivityCode } from './wcif';\n\nexport function toMicrodegrees(coord) {\n  return Math.trunc(parseFloat(coord) * 1e6);\n}\n\nexport function toDegrees(coord) {\n  return coord / 1e6;\n}\n\nconst currentElementsIds = {\n  venue: 0,\n  room: 0,\n  activity: 0,\n};\n\nfunction withNestedActivities(activities) {\n  if (activities.length === 0) return [];\n  return [\n    ...activities,\n    ...withNestedActivities(_.flatMap(activities, 'childActivities')),\n  ];\n}\n\nexport function initElementsIds(venues) {\n  // Explore the WCIF to get the highest ids.\n  const maxId = (objects) => _.max(_.map(objects, 'id')) || 0;\n  const rooms = _.flatMap(venues, 'rooms');\n  const activities = _.flatMap(rooms, (room) => withNestedActivities(room.activities));\n  currentElementsIds.venue = maxId(venues);\n  currentElementsIds.room = maxId(rooms);\n  currentElementsIds.activity = maxId(activities);\n}\n\nexport function newVenueId() {\n  currentElementsIds.venue += 1;\n  return currentElementsIds.venue;\n}\n\nexport function newRoomId() {\n  currentElementsIds.room += 1;\n  return currentElementsIds.room;\n}\n\nexport function newActivityId() {\n  currentElementsIds.activity += 1;\n  return currentElementsIds.activity;\n}\n\nexport function convertVenueActivitiesToVenueTimezone(oldTZ, venueWcif) {\n  // Called when a venue's timezone has been updated, to update all the activities times.\n  // The WCA website expose times in UTC, so we need to do two steps:\n  //   - first, express each activity times in the old venue's timezone\n  //   - second, change the timezone without changing the actual time figure\n  //   (eg: 4pm stays 4pm, but in a different timezone).\n  const newTZ = venueWcif.timezone;\n  venueWcif.rooms.forEach((room) => {\n    withNestedActivities(room.activities).forEach((activity) => {\n      // Undocumented \"keepTime\" parameter, see here:\n      // https://stackoverflow.com/questions/28593304/same-date-in-different-time-zone/28615654#28615654\n      // This enables us to change the UTC offset without changing\n      // the *actual* time of the activity!\n      // NOTE: we intentionally modify the object referenced by activity.\n      /* eslint-disable-next-line */\n      activity.startTime = window.moment(activity.startTime).tz(oldTZ).tz(newTZ, true).format();\n      /* eslint-disable-next-line */\n      activity.endTime = window.moment(activity.endTime).tz(oldTZ).tz(newTZ, true).format();\n    });\n  });\n}\n\nexport function defaultDurationFromActivityCode(activityCode) {\n  const { eventId } = parseActivityCode(activityCode);\n  if (eventId === '333fm' || eventId === '333mbf'\n      || activityCode === 'other-lunch' || activityCode === 'other-awards') {\n    return 60;\n  }\n  return 30;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}