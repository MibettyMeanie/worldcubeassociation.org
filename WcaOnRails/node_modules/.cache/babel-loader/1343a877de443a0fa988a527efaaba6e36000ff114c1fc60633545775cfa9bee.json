{"ast":null,"code":"var _jsxFileName = \"/app/WcaOnRails/app/webpacker/components/EditSchedule/EditActivities/ActionsHeader.js\";\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nimport React, { useState } from 'react';\nimport { Button, Checkbox, Container, Form, Icon, Modal } from 'semantic-ui-react';\nimport { copyRoomActivities } from \"../store/actions\";\nimport { useDispatch, useStore } from \"../../../lib/providers/StoreProvider\";\nimport { useConfirm } from \"../../../lib/providers/ConfirmProvider\";\nimport { venueWcifFromRoomId } from \"../../../lib/utils/wcif\";\nimport useInputState from \"../../../lib/hooks/useInputState\";\nfunction ActionsHeader(_ref) {\n  var selectedRoomId = _ref.selectedRoomId,\n    shouldUpdateMatches = _ref.shouldUpdateMatches,\n    setShouldUpdateMatches = _ref.setShouldUpdateMatches;\n  var _useStore = useStore(),\n    wcifSchedule = _useStore.wcifSchedule;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isCopyModalOpen = _useState2[0],\n    setIsCopyModalOpen = _useState2[1];\n  var otherRoomsWithNonEmptySchedules = wcifSchedule.venues.flatMap(function (venue) {\n    return venue.rooms.filter(function (room) {\n      return room.activities.length > 0 && room.id !== selectedRoomId;\n    }).map(function (room) {\n      return {\n        key: room.id,\n        text: \"\".concat(venue.name, \" - \").concat(room.name),\n        value: room.id\n      };\n    });\n  });\n  return otherRoomsWithNonEmptySchedules.length > 0 && /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CopyRoomScheduleModal, {\n    isOpen: isCopyModalOpen,\n    selectedRoomId: selectedRoomId,\n    roomOptions: otherRoomsWithNonEmptySchedules,\n    close: function close() {\n      return setIsCopyModalOpen(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    compact: true,\n    icon: true,\n    labelPosition: \"left\",\n    onClick: function onClick() {\n      return setIsCopyModalOpen(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"calendar plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }), \"Copy another room\"), /*#__PURE__*/React.createElement(Checkbox, {\n    label: \"Apply changes to matching activities (same type, start time, and end time) in other rooms\",\n    checked: shouldUpdateMatches,\n    onChange: setShouldUpdateMatches,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }));\n}\nfunction CopyRoomScheduleModal(_ref2) {\n  var isOpen = _ref2.isOpen,\n    selectedRoomId = _ref2.selectedRoomId,\n    roomOptions = _ref2.roomOptions,\n    close = _ref2.close;\n  var _useStore2 = useStore(),\n    wcifSchedule = _useStore2.wcifSchedule;\n  var dispatch = useDispatch();\n  var confirm = useConfirm();\n  var _useInputState = useInputState(),\n    _useInputState2 = _slicedToArray(_useInputState, 2),\n    toCopyRoomId = _useInputState2[0],\n    setToCopyRoomId = _useInputState2[1];\n  var selectedRoomVenue = venueWcifFromRoomId(wcifSchedule, selectedRoomId);\n  var toCopyRoomVenue = venueWcifFromRoomId(wcifSchedule, toCopyRoomId);\n  var areRoomsInSameVenue = selectedRoomVenue.id === (toCopyRoomVenue === null || toCopyRoomVenue === void 0 ? void 0 : toCopyRoomVenue.id);\n  var onClose = function onClose() {\n    setToCopyRoomId(undefined);\n    close();\n  };\n  var dispatchAndClose = function dispatchAndClose() {\n    dispatch(copyRoomActivities(toCopyRoomId, selectedRoomId));\n    onClose();\n  };\n  var handleCopyRoom = function handleCopyRoom() {\n    if (areRoomsInSameVenue) {\n      dispatchAndClose();\n    } else {\n      confirm({\n        content: 'The room you selected is in a different venue. You should probably only be copying from a different venue for a multi-location fewest moves competition. If so, make sure you correctly set all venue time zones BEFORE proceeding with this copy. Are you sure you want to proceed?'\n      }).then(dispatchAndClose);\n    }\n  };\n  return /*#__PURE__*/React.createElement(Modal, {\n    open: isOpen,\n    dimmer: \"blurring\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, \"Copy Existing Schedule\"), /*#__PURE__*/React.createElement(Modal.Content, {\n    as: Form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Select, {\n    label: \"Room to copy from\",\n    name: \"roomId\",\n    options: roomOptions,\n    value: toCopyRoomId,\n    onChange: setToCopyRoomId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Modal.Actions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    icon: \"copy\",\n    content: \"Copy\",\n    positive: true,\n    disabled: toCopyRoomId === undefined,\n    onClick: handleCopyRoom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    icon: \"cancel\",\n    content: \"Cancel\",\n    negative: true,\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  })));\n}\nexport default ActionsHeader;","map":{"version":3,"names":["React","useState","Button","Checkbox","Container","Form","Icon","Modal","copyRoomActivities","useDispatch","useStore","useConfirm","venueWcifFromRoomId","useInputState","ActionsHeader","_ref","selectedRoomId","shouldUpdateMatches","setShouldUpdateMatches","_useStore","wcifSchedule","_useState","_useState2","_slicedToArray","isCopyModalOpen","setIsCopyModalOpen","otherRoomsWithNonEmptySchedules","venues","flatMap","venue","rooms","filter","room","activities","length","id","map","key","text","concat","name","value","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","CopyRoomScheduleModal","isOpen","roomOptions","close","compact","icon","labelPosition","onClick","label","checked","onChange","_ref2","_useStore2","dispatch","confirm","_useInputState","_useInputState2","toCopyRoomId","setToCopyRoomId","selectedRoomVenue","toCopyRoomVenue","areRoomsInSameVenue","onClose","undefined","dispatchAndClose","handleCopyRoom","content","then","open","dimmer","Header","Content","as","Select","options","Actions","positive","disabled","negative"],"sources":["/app/WcaOnRails/app/webpacker/components/EditSchedule/EditActivities/ActionsHeader.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Button,\n  Checkbox,\n  Container,\n  Form,\n  Icon,\n  Modal,\n} from 'semantic-ui-react';\n\nimport { copyRoomActivities } from '../store/actions';\nimport { useDispatch, useStore } from '../../../lib/providers/StoreProvider';\nimport { useConfirm } from '../../../lib/providers/ConfirmProvider';\nimport { venueWcifFromRoomId } from '../../../lib/utils/wcif';\nimport useInputState from '../../../lib/hooks/useInputState';\n\nfunction ActionsHeader({\n  selectedRoomId,\n  shouldUpdateMatches,\n  setShouldUpdateMatches,\n}) {\n  const { wcifSchedule } = useStore();\n\n  const [isCopyModalOpen, setIsCopyModalOpen] = useState(false);\n\n  const otherRoomsWithNonEmptySchedules = wcifSchedule.venues.flatMap(\n    (venue) => venue.rooms.filter(\n      (room) => room.activities.length > 0 && room.id !== selectedRoomId,\n    ).map((room) => ({\n      key: room.id,\n      text: `${venue.name} - ${room.name}`,\n      value: room.id,\n    })),\n  );\n\n  return (\n    otherRoomsWithNonEmptySchedules.length > 0 && (\n      <Container>\n        <CopyRoomScheduleModal\n          isOpen={isCopyModalOpen}\n          selectedRoomId={selectedRoomId}\n          roomOptions={otherRoomsWithNonEmptySchedules}\n          close={() => setIsCopyModalOpen(false)}\n        />\n\n        <Button compact icon labelPosition=\"left\" onClick={() => setIsCopyModalOpen(true)}>\n          <Icon name=\"calendar plus\" />\n          Copy another room\n        </Button>\n        <Checkbox\n          label=\"Apply changes to matching activities (same type, start time, and end time) in other rooms\"\n          checked={shouldUpdateMatches}\n          onChange={setShouldUpdateMatches}\n        />\n      </Container>\n    )\n  );\n}\n\nfunction CopyRoomScheduleModal({\n  isOpen,\n  selectedRoomId,\n  roomOptions,\n  close,\n}) {\n  const { wcifSchedule } = useStore();\n  const dispatch = useDispatch();\n  const confirm = useConfirm();\n\n  const [toCopyRoomId, setToCopyRoomId] = useInputState();\n  const selectedRoomVenue = venueWcifFromRoomId(wcifSchedule, selectedRoomId);\n  const toCopyRoomVenue = venueWcifFromRoomId(wcifSchedule, toCopyRoomId);\n  const areRoomsInSameVenue = selectedRoomVenue.id === toCopyRoomVenue?.id;\n\n  const onClose = () => {\n    setToCopyRoomId(undefined);\n    close();\n  };\n\n  const dispatchAndClose = () => {\n    dispatch(copyRoomActivities(toCopyRoomId, selectedRoomId));\n    onClose();\n  };\n\n  const handleCopyRoom = () => {\n    if (areRoomsInSameVenue) {\n      dispatchAndClose();\n    } else {\n      confirm({\n        content: 'The room you selected is in a different venue. You should probably only be copying from a different venue for a multi-location fewest moves competition. If so, make sure you correctly set all venue time zones BEFORE proceeding with this copy. Are you sure you want to proceed?',\n      }).then(dispatchAndClose);\n    }\n  };\n\n  return (\n    <Modal\n      open={isOpen}\n      dimmer=\"blurring\"\n    >\n      <Modal.Header>Copy Existing Schedule</Modal.Header>\n      <Modal.Content as={Form}>\n        <Form.Select\n          label=\"Room to copy from\"\n          name=\"roomId\"\n          options={roomOptions}\n          value={toCopyRoomId}\n          onChange={setToCopyRoomId}\n        />\n      </Modal.Content>\n      <Modal.Actions>\n        <Button\n          icon=\"copy\"\n          content=\"Copy\"\n          positive\n          disabled={toCopyRoomId === undefined}\n          onClick={handleCopyRoom}\n        />\n        <Button\n          icon=\"cancel\"\n          content=\"Cancel\"\n          negative\n          onClick={onClose}\n        />\n      </Modal.Actions>\n    </Modal>\n  );\n}\n\nexport default ActionsHeader;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}