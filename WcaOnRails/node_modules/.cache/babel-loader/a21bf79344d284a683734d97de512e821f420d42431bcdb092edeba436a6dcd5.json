{"ast":null,"code":"export function fetchWithAuthenticityToken(url, fetchOptions) {\n  var options = fetchOptions || {};\n  if (!options.headers) {\n    options.headers = {};\n  }\n  var csrfTokenElement = document.querySelector('meta[name=csrf-token]');\n  if (csrfTokenElement) {\n    options.headers['X-CSRF-Token'] = csrfTokenElement.content;\n  }\n  return fetch(url, options);\n}\nexport function fetchJsonOrError(url) {\n  var fetchOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return fetchWithAuthenticityToken(url, fetchOptions).then(function (response) {\n    return response.json().then(function (json) {\n      if (!response.ok) {\n        throw new Error(\"\".concat(response.status, \": \").concat(response.statusText, \"\\n\").concat(json.error));\n      }\n      return {\n        data: json,\n        headers: response.headers\n      };\n    });\n  });\n}","map":{"version":3,"names":["fetchWithAuthenticityToken","url","fetchOptions","options","headers","csrfTokenElement","document","querySelector","content","fetch","fetchJsonOrError","arguments","length","undefined","then","response","json","ok","Error","concat","status","statusText","error","data"],"sources":["/app/WcaOnRails/app/webpacker/lib/requests/fetchWithAuthenticityToken.js"],"sourcesContent":["export function fetchWithAuthenticityToken(url, fetchOptions) {\n  const options = fetchOptions || {};\n  if (!options.headers) {\n    options.headers = {};\n  }\n  const csrfTokenElement = document.querySelector('meta[name=csrf-token]');\n  if (csrfTokenElement) {\n    options.headers['X-CSRF-Token'] = csrfTokenElement.content;\n  }\n  return fetch(url, options);\n}\n\nexport function fetchJsonOrError(url, fetchOptions = {}) {\n  return fetchWithAuthenticityToken(url, fetchOptions)\n    .then((response) => response.json()\n      .then((json) => {\n        if (!response.ok) {\n          throw new Error(`${response.status}: ${response.statusText}\\n${json.error}`);\n        }\n        return { data: json, headers: response.headers };\n      }));\n}\n"],"mappings":"AAAA,OAAO,SAASA,0BAA0BA,CAACC,GAAG,EAAEC,YAAY,EAAE;EAC5D,IAAMC,OAAO,GAAGD,YAAY,IAAI,CAAC,CAAC;EAClC,IAAI,CAACC,OAAO,CAACC,OAAO,EAAE;IACpBD,OAAO,CAACC,OAAO,GAAG,CAAC,CAAC;EACtB;EACA,IAAMC,gBAAgB,GAAGC,QAAQ,CAACC,aAAa,CAAC,uBAAuB,CAAC;EACxE,IAAIF,gBAAgB,EAAE;IACpBF,OAAO,CAACC,OAAO,CAAC,cAAc,CAAC,GAAGC,gBAAgB,CAACG,OAAO;EAC5D;EACA,OAAOC,KAAK,CAACR,GAAG,EAAEE,OAAO,CAAC;AAC5B;AAEA,OAAO,SAASO,gBAAgBA,CAACT,GAAG,EAAqB;EAAA,IAAnBC,YAAY,GAAAS,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EACrD,OAAOX,0BAA0B,CAACC,GAAG,EAAEC,YAAY,CAAC,CACjDY,IAAI,CAAC,UAACC,QAAQ;IAAA,OAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAChCF,IAAI,CAAC,UAACE,IAAI,EAAK;MACd,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,IAAAC,MAAA,CAAIJ,QAAQ,CAACK,MAAM,QAAAD,MAAA,CAAKJ,QAAQ,CAACM,UAAU,QAAAF,MAAA,CAAKH,IAAI,CAACM,KAAK,CAAE,CAAC;MAC9E;MACA,OAAO;QAAEC,IAAI,EAAEP,IAAI;QAAEZ,OAAO,EAAEW,QAAQ,CAACX;MAAQ,CAAC;IAClD,CAAC,CAAC;EAAA,EAAC;AACT"},"metadata":{},"sourceType":"module","externalDependencies":[]}