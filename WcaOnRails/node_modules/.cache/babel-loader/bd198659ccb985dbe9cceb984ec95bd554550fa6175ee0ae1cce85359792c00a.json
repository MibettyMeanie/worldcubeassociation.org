{"ast":null,"code":"import _times from \"lodash/times\";\nvar _jsxFileName = \"/app/WcaOnRails/app/webpacker/components/Results/ResultForm/ResultForm.js\";\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Button } from 'semantic-ui-react';\nimport AttemptsForm from \"./AttemptsForm\";\nimport PersonForm from \"./PersonForm\";\nimport RoundForm from \"./RoundForm\";\nimport NewPersonModal from \"./NewPersonModal\";\nimport DeleteResultButton from \"./DeleteResultButton\";\nimport SaveMessage from \"./SaveMessage\";\nimport AfterActionMessage from \"./AfterActionMessage\";\nimport useSaveAction from \"../../../lib/hooks/useSaveAction\";\nimport { average, best } from \"../../../lib/wca-live/attempts\";\nimport { shouldComputeAverage, getExpectedSolveCount } from \"../../../lib/helpers/results\";\nimport { resultUrl, competitionAllResultsUrl, adminFixResultsUrl } from \"../../../lib/requests/routes.js.erb\";\nimport { countries } from \"../../../lib/wca-data.js.erb\";\nimport \"./ResultForm.scss\";\nvar roundDataFromResult = function roundDataFromResult(result) {\n  return {\n    competitionId: result.competition_id || '',\n    roundTypeId: result.round_type_id || '',\n    formatId: result.format_id || '',\n    eventId: result.event_id || ''\n  };\n};\nvar attemptsDataFromResult = function attemptsDataFromResult(result) {\n  return {\n    attempts: _times(getExpectedSolveCount(result.format_id), function (index) {\n      return result.attempts && result.attempts[index] || 0;\n    }),\n    markerBest: result.regional_single_record,\n    markerAvg: result.regional_average_record\n  };\n};\nvar personDataFromResult = function personDataFromResult(result) {\n  return {\n    wcaId: result.wca_id || '',\n    name: result.name || '',\n    countryIso2: result.country_iso2 || ''\n  };\n};\nvar dataToResult = function dataToResult(_ref, person, attemptsData) {\n  var eventId = _ref.eventId,\n    formatId = _ref.formatId,\n    competitionId = _ref.competitionId,\n    roundTypeId = _ref.roundTypeId;\n  var country = countries.byIso2[person.countryIso2];\n  var result = {\n    personId: person.wcaId,\n    personName: person.name,\n    countryId: country ? country.id : undefined,\n    best: best(attemptsData.attempts),\n    average: average(attemptsData.attempts, eventId, attemptsData.attempts.length),\n    regionalAverageRecord: attemptsData.markerAvg,\n    regionalSingleRecord: attemptsData.markerBest,\n    eventId: eventId,\n    formatId: formatId,\n    competitionId: competitionId,\n    roundTypeId: roundTypeId\n  };\n  // Map individual attempts to valueN...\n  attemptsData.attempts.forEach(function (a, index) {\n    result[\"value\".concat(index + 1)] = a;\n  });\n  return {\n    result: result\n  };\n};\nfunction ResultForm(_ref2) {\n  var result = _ref2.result,\n    save = _ref2.save,\n    saving = _ref2.saving,\n    onCreate = _ref2.onCreate,\n    onUpdate = _ref2.onUpdate,\n    onDelete = _ref2.onDelete;\n  var id = result.id;\n  var computeAverage = shouldComputeAverage(result);\n\n  // Person-related state.\n  var _useState = useState(personDataFromResult(result)),\n    _useState2 = _slicedToArray(_useState, 2),\n    personData = _useState2[0],\n    setPersonData = _useState2[1];\n\n  // Round-related state.\n  var _useState3 = useState(roundDataFromResult(result)),\n    _useState4 = _slicedToArray(_useState3, 2),\n    roundData = _useState4[0],\n    setRoundData = _useState4[1];\n\n  // Attempts-related state.\n  var _useState5 = useState(attemptsDataFromResult(result)),\n    _useState6 = _slicedToArray(_useState5, 2),\n    attemptsState = _useState6[0],\n    setAttemptsState = _useState6[1];\n\n  // Populate the original states whenever the original result changes.\n  useEffect(function () {\n    setAttemptsState(attemptsDataFromResult(result));\n    setRoundData(roundDataFromResult(result));\n    setPersonData(personDataFromResult(result));\n  }, [result]);\n\n  // Use response to store errors and messages.\n  var _useState7 = useState({}),\n    _useState8 = _slicedToArray(_useState7, 2),\n    response = _useState8[0],\n    setResponse = _useState8[1];\n  var onSuccess = useCallback(function (data, responseJson) {\n    // First of all, set the errors/messages.\n    setResponse(responseJson);\n    if (responseJson.errors === undefined) {\n      // Notify the parent(s) based on creation/update.\n      if (id === undefined) {\n        onCreate({\n          result: data,\n          response: responseJson\n        });\n      } else {\n        onUpdate({\n          result: data,\n          response: responseJson\n        });\n      }\n    }\n  }, [id, setResponse, onCreate, onUpdate]);\n  var onError = useCallback(function (err) {\n    // 'onError' is called only if the request fails, which shouldn't happen\n    // whatever the user input is. If this does happen, ask them to report to us!\n    setResponse({\n      errors: ['The request to the server failed. This is definitely unexpected, you may consider contacting the WST with the error below!', err.toString()]\n    });\n  }, [setResponse]);\n  var saveAction = useCallback(function (data) {\n    var url = id === undefined ? resultUrl('') : resultUrl(id);\n    // If 'id' is undefined, then we're creating a new result and it's a POST,\n    // otherwise it's a PATCH.\n    var method = id === undefined ? 'POST' : 'PATCH';\n    save(url, data, function (responseJson) {\n      return onSuccess(data.result, responseJson);\n    }, {\n      method: method\n    }, onError);\n  }, [save, id, onSuccess, onError]);\n  var deleteAction = useCallback(function () {\n    save(resultUrl(result.id), {}, function (responseJson) {\n      return onDelete({\n        result: result,\n        response: responseJson\n      });\n    }, {\n      method: 'DELETE'\n    }, onError);\n  }, [save, result, onDelete, onError]);\n  var onPersonCreate = useCallback(function (data) {\n    setPersonData(personDataFromResult(data));\n    setResponse({});\n  }, [setResponse, setPersonData]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"result-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }, \"Round data\"), /*#__PURE__*/React.createElement(RoundForm, {\n    roundData: roundData,\n    setRoundData: setRoundData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }\n  }, \"Person data\"), /*#__PURE__*/React.createElement(NewPersonModal, {\n    trigger: /*#__PURE__*/React.createElement(Button, {\n      positive: true,\n      compact: true,\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 18\n      }\n    }, \"Create new person\"),\n    onPersonCreate: onPersonCreate,\n    competitionId: roundData.competitionId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(PersonForm, {\n    personData: personData,\n    setPersonData: setPersonData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }, \"Attempts\"), /*#__PURE__*/React.createElement(AttemptsForm, {\n    eventId: result.event_id,\n    state: attemptsState,\n    setState: setAttemptsState,\n    computeAverage: computeAverage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(SaveMessage, {\n    response: response,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    positive: true,\n    loading: saving,\n    disabled: saving,\n    onClick: function onClick() {\n      return saveAction(dataToResult(roundData, personData, attemptsState));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }, \"Save\"), /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    as: \"a\",\n    loading: saving,\n    disabled: saving,\n    href: competitionAllResultsUrl(roundData.competitionId, roundData.eventId),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  }, \"Go to competition results\"), /*#__PURE__*/React.createElement(Button, {\n    secondary: true,\n    as: \"a\",\n    loading: saving,\n    disabled: saving,\n    href: adminFixResultsUrl(personData.wcaId, roundData.competitionId, roundData.eventId, roundData.roundTypeId),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }\n  }, \"Go to Fix results\")), id && /*#__PURE__*/React.createElement(DeleteResultButton, {\n    deleteAction: deleteAction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }\n  }));\n}\n\n// This is a simple wrapper to be able to manage request-specific states,\n// and to be able to hide the form upon creation.\nfunction ResultFormWrapper(_ref3) {\n  var result = _ref3.result,\n    sync = _ref3.sync;\n  var _useSaveAction = useSaveAction(),\n    save = _useSaveAction.save,\n    saving = _useSaveAction.saving;\n\n  // This is used to track if we did save something.\n  var _useState9 = useState(undefined),\n    _useState10 = _slicedToArray(_useState9, 2),\n    created = _useState10[0],\n    setCreated = _useState10[1];\n  var _useState11 = useState(undefined),\n    _useState12 = _slicedToArray(_useState11, 2),\n    deleted = _useState12[0],\n    setDeleted = _useState12[1];\n  var _useState13 = useState(undefined),\n    _useState14 = _slicedToArray(_useState13, 2),\n    edited = _useState14[0],\n    setEdited = _useState14[1];\n  var setUpdated = useCallback(function (data) {\n    setEdited(data);\n    sync();\n  }, [sync, setEdited]);\n  if (created) {\n    return /*#__PURE__*/React.createElement(AfterActionMessage, {\n      wcaId: created.result.personId,\n      eventId: result.event_id,\n      competitionId: result.competition_id,\n      response: created.response,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 7\n      }\n    });\n  }\n  if (edited) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(AfterActionMessage, {\n      wcaId: edited.result.personId,\n      eventId: result.event_id,\n      competitionId: result.competition_id,\n      response: edited.response,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      secondary: true,\n      loading: saving,\n      disabled: saving,\n      onClick: function onClick() {\n        return setEdited(undefined);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }\n    }, \"Go back for more edits\"));\n  }\n  if (deleted) {\n    return /*#__PURE__*/React.createElement(AfterActionMessage, {\n      wcaId: deleted.result.wca_id,\n      eventId: result.event_id,\n      competitionId: result.competition_id,\n      response: deleted.response,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 7\n      }\n    });\n  }\n  return /*#__PURE__*/React.createElement(ResultForm, {\n    result: result,\n    save: save,\n    saving: saving,\n    onCreate: setCreated,\n    onUpdate: setUpdated,\n    onDelete: setDeleted,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 5\n    }\n  });\n}\nexport default ResultFormWrapper;","map":{"version":3,"names":["React","useState","useEffect","useCallback","Button","AttemptsForm","PersonForm","RoundForm","NewPersonModal","DeleteResultButton","SaveMessage","AfterActionMessage","useSaveAction","average","best","shouldComputeAverage","getExpectedSolveCount","resultUrl","competitionAllResultsUrl","adminFixResultsUrl","countries","roundDataFromResult","result","competitionId","competition_id","roundTypeId","round_type_id","formatId","format_id","eventId","event_id","attemptsDataFromResult","attempts","_times","index","markerBest","regional_single_record","markerAvg","regional_average_record","personDataFromResult","wcaId","wca_id","name","countryIso2","country_iso2","dataToResult","_ref","person","attemptsData","country","byIso2","personId","personName","countryId","id","undefined","length","regionalAverageRecord","regionalSingleRecord","forEach","a","concat","ResultForm","_ref2","save","saving","onCreate","onUpdate","onDelete","computeAverage","_useState","_useState2","_slicedToArray","personData","setPersonData","_useState3","_useState4","roundData","setRoundData","_useState5","_useState6","attemptsState","setAttemptsState","_useState7","_useState8","response","setResponse","onSuccess","data","responseJson","errors","onError","err","toString","saveAction","url","method","deleteAction","onPersonCreate","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","trigger","positive","compact","size","state","setState","loading","disabled","onClick","primary","as","href","secondary","ResultFormWrapper","_ref3","sync","_useSaveAction","_useState9","_useState10","created","setCreated","_useState11","_useState12","deleted","setDeleted","_useState13","_useState14","edited","setEdited","setUpdated"],"sources":["/app/WcaOnRails/app/webpacker/components/Results/ResultForm/ResultForm.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\n\nimport { Button } from 'semantic-ui-react';\n\nimport _ from 'lodash';\nimport AttemptsForm from './AttemptsForm';\nimport PersonForm from './PersonForm';\nimport RoundForm from './RoundForm';\nimport NewPersonModal from './NewPersonModal';\nimport DeleteResultButton from './DeleteResultButton';\nimport SaveMessage from './SaveMessage';\nimport AfterActionMessage from './AfterActionMessage';\nimport useSaveAction from '../../../lib/hooks/useSaveAction';\nimport { average, best } from '../../../lib/wca-live/attempts';\nimport { shouldComputeAverage, getExpectedSolveCount } from '../../../lib/helpers/results';\nimport { resultUrl, competitionAllResultsUrl, adminFixResultsUrl } from '../../../lib/requests/routes.js.erb';\nimport { countries } from '../../../lib/wca-data.js.erb';\nimport './ResultForm.scss';\n\nconst roundDataFromResult = (result) => ({\n  competitionId: result.competition_id || '',\n  roundTypeId: result.round_type_id || '',\n  formatId: result.format_id || '',\n  eventId: result.event_id || '',\n});\n\nconst attemptsDataFromResult = (result) => ({\n  attempts: _.times(\n    getExpectedSolveCount(result.format_id),\n    (index) => (result.attempts && result.attempts[index]) || 0,\n  ),\n  markerBest: result.regional_single_record,\n  markerAvg: result.regional_average_record,\n});\n\nconst personDataFromResult = (result) => ({\n  wcaId: result.wca_id || '',\n  name: result.name || '',\n  countryIso2: result.country_iso2 || '',\n});\n\nconst dataToResult = ({\n  eventId, formatId, competitionId, roundTypeId,\n}, person, attemptsData) => {\n  const country = countries.byIso2[person.countryIso2];\n  const result = {\n    personId: person.wcaId,\n    personName: person.name,\n    countryId: country ? country.id : undefined,\n    best: best(attemptsData.attempts),\n    average: average(attemptsData.attempts, eventId, attemptsData.attempts.length),\n    regionalAverageRecord: attemptsData.markerAvg,\n    regionalSingleRecord: attemptsData.markerBest,\n    eventId,\n    formatId,\n    competitionId,\n    roundTypeId,\n  };\n  // Map individual attempts to valueN...\n  attemptsData.attempts.forEach((a, index) => { result[`value${index + 1}`] = a; });\n  return { result };\n};\n\nfunction ResultForm({\n  result, save, saving, onCreate, onUpdate, onDelete,\n}) {\n  const { id } = result;\n  const computeAverage = shouldComputeAverage(result);\n\n  // Person-related state.\n  const [personData, setPersonData] = useState(personDataFromResult(result));\n\n  // Round-related state.\n  const [roundData, setRoundData] = useState(roundDataFromResult(result));\n\n  // Attempts-related state.\n  const [attemptsState, setAttemptsState] = useState(attemptsDataFromResult(result));\n\n  // Populate the original states whenever the original result changes.\n  useEffect(() => {\n    setAttemptsState(attemptsDataFromResult(result));\n    setRoundData(roundDataFromResult(result));\n    setPersonData(personDataFromResult(result));\n  }, [result]);\n\n  // Use response to store errors and messages.\n  const [response, setResponse] = useState({});\n\n  const onSuccess = useCallback((data, responseJson) => {\n    // First of all, set the errors/messages.\n    setResponse(responseJson);\n    if (responseJson.errors === undefined) {\n      // Notify the parent(s) based on creation/update.\n      if (id === undefined) {\n        onCreate({ result: data, response: responseJson });\n      } else {\n        onUpdate({ result: data, response: responseJson });\n      }\n    }\n  }, [id, setResponse, onCreate, onUpdate]);\n\n  const onError = useCallback((err) => {\n    // 'onError' is called only if the request fails, which shouldn't happen\n    // whatever the user input is. If this does happen, ask them to report to us!\n    setResponse({\n      errors: [\n        'The request to the server failed. This is definitely unexpected, you may consider contacting the WST with the error below!',\n        err.toString(),\n      ],\n    });\n  }, [setResponse]);\n\n  const saveAction = useCallback((data) => {\n    const url = id === undefined ? resultUrl('') : resultUrl(id);\n    // If 'id' is undefined, then we're creating a new result and it's a POST,\n    // otherwise it's a PATCH.\n    const method = id === undefined ? 'POST' : 'PATCH';\n    save(\n      url,\n      data,\n      (responseJson) => onSuccess(data.result, responseJson),\n      { method },\n      onError,\n    );\n  }, [save, id, onSuccess, onError]);\n\n  const deleteAction = useCallback(() => {\n    save(\n      resultUrl(result.id),\n      {},\n      (responseJson) => onDelete({ result, response: responseJson }),\n      { method: 'DELETE' },\n      onError,\n    );\n  }, [save, result, onDelete, onError]);\n\n  const onPersonCreate = useCallback((data) => {\n    setPersonData(personDataFromResult(data));\n    setResponse({});\n  }, [setResponse, setPersonData]);\n\n  return (\n    <div className=\"result-form\">\n      <h3>\n        Round data\n      </h3>\n      <RoundForm roundData={roundData} setRoundData={setRoundData} />\n      <h3>\n        Person data\n      </h3>\n      <NewPersonModal\n        trigger={<Button positive compact size=\"small\">Create new person</Button>}\n        onPersonCreate={onPersonCreate}\n        competitionId={roundData.competitionId}\n      />\n      <PersonForm personData={personData} setPersonData={setPersonData} />\n      <h3>\n        Attempts\n      </h3>\n      <AttemptsForm\n        eventId={result.event_id}\n        state={attemptsState}\n        setState={setAttemptsState}\n        computeAverage={computeAverage}\n      />\n      <SaveMessage response={response} />\n      <div>\n        <Button\n          positive\n          loading={saving}\n          disabled={saving}\n          onClick={() => saveAction(dataToResult(roundData, personData, attemptsState))}\n        >\n          Save\n        </Button>\n        <Button\n          primary\n          as=\"a\"\n          loading={saving}\n          disabled={saving}\n          href={competitionAllResultsUrl(roundData.competitionId, roundData.eventId)}\n        >\n          Go to competition results\n        </Button>\n        <Button\n          secondary\n          as=\"a\"\n          loading={saving}\n          disabled={saving}\n          href={adminFixResultsUrl(\n            personData.wcaId,\n            roundData.competitionId,\n            roundData.eventId,\n            roundData.roundTypeId,\n          )}\n        >\n          Go to Fix results\n        </Button>\n      </div>\n      {id && (\n        <DeleteResultButton deleteAction={deleteAction} />\n      )}\n    </div>\n  );\n}\n\n// This is a simple wrapper to be able to manage request-specific states,\n// and to be able to hide the form upon creation.\nfunction ResultFormWrapper({ result, sync }) {\n  const { save, saving } = useSaveAction();\n\n  // This is used to track if we did save something.\n  const [created, setCreated] = useState(undefined);\n  const [deleted, setDeleted] = useState(undefined);\n\n  const [edited, setEdited] = useState(undefined);\n\n  const setUpdated = useCallback((data) => {\n    setEdited(data);\n    sync();\n  }, [sync, setEdited]);\n\n  if (created) {\n    return (\n      <AfterActionMessage\n        wcaId={created.result.personId}\n        eventId={result.event_id}\n        competitionId={result.competition_id}\n        response={created.response}\n      />\n    );\n  }\n  if (edited) {\n    return (\n      <div>\n        <AfterActionMessage\n          wcaId={edited.result.personId}\n          eventId={result.event_id}\n          competitionId={result.competition_id}\n          response={edited.response}\n        />\n        <Button\n          secondary\n          loading={saving}\n          disabled={saving}\n          onClick={() => setEdited(undefined)}\n        >\n          Go back for more edits\n        </Button>\n      </div>\n    );\n  }\n  if (deleted) {\n    return (\n      <AfterActionMessage\n        wcaId={deleted.result.wca_id}\n        eventId={result.event_id}\n        competitionId={result.competition_id}\n        response={deleted.response}\n      />\n    );\n  }\n  return (\n    <ResultForm\n      result={result}\n      save={save}\n      saving={saving}\n      onCreate={setCreated}\n      onUpdate={setUpdated}\n      onDelete={setDeleted}\n    />\n  );\n}\n\nexport default ResultFormWrapper;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}