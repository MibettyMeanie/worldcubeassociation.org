{"ast":null,"code":"import _uniq from \"lodash/uniq\";\nvar _jsxFileName = \"/app/WcaOnRails/app/webpacker/components/Results/ResultForm/RoundForm.js\";\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport React, { useState } from 'react';\nimport { Form, Grid, Icon, Popup } from 'semantic-ui-react';\nimport { formats, events, roundTypes } from \"../../../lib/wca-data.js.erb\";\nimport useNestedInputUpdater from \"../../../lib/hooks/useNestedInputUpdater\";\nimport { competitionEventsDataUrl } from \"../../../lib/requests/routes.js.erb\";\nimport { fetchJsonOrError } from \"../../../lib/requests/fetchWithAuthenticityToken\";\nvar itemFromId = function itemFromId(id, items) {\n  return {\n    key: id,\n    value: id,\n    text: items.byId[id].name\n  };\n};\nvar formatRoundData = function formatRoundData(_ref) {\n  var eventId = _ref.eventId,\n    formatId = _ref.formatId,\n    roundTypeId = _ref.roundTypeId;\n  return _defineProperty({}, eventId, {\n    eventId: eventId,\n    rounds: [{\n      formatId: formatId,\n      roundTypeId: roundTypeId\n    }]\n  });\n};\nvar extractFromRoundData = function extractFromRoundData(roundData, eventId, key, items) {\n  var ids = _uniq(roundData[eventId].rounds.map(function (r) {\n    return r[key];\n  }));\n  return ids.map(function (id) {\n    return itemFromId(id, items);\n  });\n};\nfunction RoundForm(_ref3) {\n  var roundData = _ref3.roundData,\n    setRoundData = _ref3.setRoundData;\n  var competitionId = roundData.competitionId,\n    roundTypeId = roundData.roundTypeId,\n    eventId = roundData.eventId,\n    formatId = roundData.formatId;\n  var setCompetition = useNestedInputUpdater(setRoundData, 'competitionId');\n  var setEvent = useNestedInputUpdater(setRoundData, 'eventId');\n  var setFormat = useNestedInputUpdater(setRoundData, 'formatId');\n  var setRoundType = useNestedInputUpdater(setRoundData, 'roundTypeId');\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    competitionIdError = _useState2[0],\n    setCompetitionIdError = _useState2[1];\n  var _useState3 = useState(formatRoundData(roundData)),\n    _useState4 = _slicedToArray(_useState3, 2),\n    localRoundData = _useState4[0],\n    setLocalRoundData = _useState4[1];\n  var availableEvents = Object.keys(localRoundData).map(function (k) {\n    return itemFromId(k, events);\n  });\n  var availableRoundTypes = extractFromRoundData(localRoundData, eventId, 'roundTypeId', roundTypes);\n  var availableFormats = extractFromRoundData(localRoundData, eventId, 'formatId', formats);\n  var fetchDataForCompetition = function fetchDataForCompetition(id) {\n    setCompetitionIdError(null);\n    fetchJsonOrError(competitionEventsDataUrl(id)).then(function (_ref4) {\n      var data = _ref4.data;\n      setLocalRoundData(data);\n    })[\"catch\"](function (err) {\n      return setCompetitionIdError(err.message);\n    });\n  };\n\n  // FIXME: we use padded grid here because Bootstrap's row conflicts with\n  // FUI's row and messes up the negative margins... :(\n  return /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    stackable: true,\n    padded: true,\n    columns: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Input, {\n    label: \"Competition ID\",\n    value: competitionId,\n    onChange: setCompetition,\n    error: competitionIdError,\n    icon: /*#__PURE__*/React.createElement(Popup, {\n      trigger: /*#__PURE__*/React.createElement(Icon, {\n        circular: true,\n        link: true,\n        onClick: function onClick() {\n          return fetchDataForCompetition(competitionId);\n        },\n        name: \"sync\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 19\n        }\n      }),\n      content: \"Get the events and round data for that competition\",\n      position: \"top right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Select, {\n    label: \"Event\",\n    value: eventId,\n    onChange: setEvent,\n    options: availableEvents,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Select, {\n    label: \"Round type\",\n    value: roundTypeId,\n    onChange: setRoundType,\n    options: availableRoundTypes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Select, {\n    label: \"Format\",\n    value: formatId,\n    onChange: setFormat,\n    options: availableFormats,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }))));\n}\nexport default RoundForm;","map":{"version":3,"names":["React","useState","Form","Grid","Icon","Popup","formats","events","roundTypes","useNestedInputUpdater","competitionEventsDataUrl","fetchJsonOrError","itemFromId","id","items","key","value","text","byId","name","formatRoundData","_ref","eventId","formatId","roundTypeId","_defineProperty","rounds","extractFromRoundData","roundData","ids","_uniq","map","r","RoundForm","_ref3","setRoundData","competitionId","setCompetition","setEvent","setFormat","setRoundType","_useState","_useState2","_slicedToArray","competitionIdError","setCompetitionIdError","_useState3","_useState4","localRoundData","setLocalRoundData","availableEvents","Object","keys","k","availableRoundTypes","availableFormats","fetchDataForCompetition","then","_ref4","data","err","message","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","stackable","padded","columns","Column","Input","label","onChange","error","icon","trigger","circular","link","onClick","content","position","Select","options"],"sources":["/app/WcaOnRails/app/webpacker/components/Results/ResultForm/RoundForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Form, Grid, Icon, Popup,\n} from 'semantic-ui-react';\n\nimport _ from 'lodash';\nimport { formats, events, roundTypes } from '../../../lib/wca-data.js.erb';\nimport useNestedInputUpdater from '../../../lib/hooks/useNestedInputUpdater';\nimport { competitionEventsDataUrl } from '../../../lib/requests/routes.js.erb';\nimport { fetchJsonOrError } from '../../../lib/requests/fetchWithAuthenticityToken';\n\nconst itemFromId = (id, items) => ({\n  key: id,\n  value: id,\n  text: items.byId[id].name,\n});\n\nconst formatRoundData = ({ eventId, formatId, roundTypeId }) => ({\n  [eventId]: {\n    eventId,\n    rounds: [{ formatId, roundTypeId }],\n  },\n});\n\nconst extractFromRoundData = (roundData, eventId, key, items) => {\n  const ids = _.uniq(roundData[eventId].rounds.map((r) => r[key]));\n  return ids.map((id) => itemFromId(id, items));\n};\n\nfunction RoundForm({ roundData, setRoundData }) {\n  const {\n    competitionId, roundTypeId, eventId, formatId,\n  } = roundData;\n\n  const setCompetition = useNestedInputUpdater(setRoundData, 'competitionId');\n  const setEvent = useNestedInputUpdater(setRoundData, 'eventId');\n  const setFormat = useNestedInputUpdater(setRoundData, 'formatId');\n  const setRoundType = useNestedInputUpdater(setRoundData, 'roundTypeId');\n\n  const [competitionIdError, setCompetitionIdError] = useState(null);\n\n  const [localRoundData, setLocalRoundData] = useState(formatRoundData(roundData));\n\n  const availableEvents = Object.keys(localRoundData).map((k) => itemFromId(k, events));\n  const availableRoundTypes = extractFromRoundData(localRoundData, eventId, 'roundTypeId', roundTypes);\n  const availableFormats = extractFromRoundData(localRoundData, eventId, 'formatId', formats);\n\n  const fetchDataForCompetition = (id) => {\n    setCompetitionIdError(null);\n    fetchJsonOrError(competitionEventsDataUrl(id)).then(({ data }) => {\n      setLocalRoundData(data);\n    }).catch((err) => setCompetitionIdError(err.message));\n  };\n\n  // FIXME: we use padded grid here because Bootstrap's row conflicts with\n  // FUI's row and messes up the negative margins... :(\n  return (\n    <Form>\n      <Grid stackable padded columns={4}>\n        <Grid.Column>\n          <Form.Input\n            label=\"Competition ID\"\n            value={competitionId}\n            onChange={setCompetition}\n            error={competitionIdError}\n            icon={(\n              <Popup\n                trigger={(\n                  <Icon\n                    circular\n                    link\n                    onClick={() => fetchDataForCompetition(competitionId)}\n                    name=\"sync\"\n                  />\n                )}\n                content=\"Get the events and round data for that competition\"\n                position=\"top right\"\n              />\n            )}\n          />\n        </Grid.Column>\n        <Grid.Column>\n          <Form.Select\n            label=\"Event\"\n            value={eventId}\n            onChange={setEvent}\n            options={availableEvents}\n          />\n        </Grid.Column>\n        <Grid.Column>\n          <Form.Select\n            label=\"Round type\"\n            value={roundTypeId}\n            onChange={setRoundType}\n            options={availableRoundTypes}\n          />\n        </Grid.Column>\n        <Grid.Column>\n          <Form.Select\n            label=\"Format\"\n            value={formatId}\n            onChange={setFormat}\n            options={availableFormats}\n          />\n        </Grid.Column>\n      </Grid>\n    </Form>\n  );\n}\n\nexport default RoundForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}