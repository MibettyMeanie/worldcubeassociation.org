{"ast":null,"code":"import _isEqual from \"lodash/isEqual\";\nvar _jsxFileName = \"/app/WcaOnRails/app/webpacker/components/EditEvents/Modals/EditTimeLimitModal/index.js\";\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { Form, Label, Radio } from 'semantic-ui-react';\nimport { events } from \"../../../../lib/wca-data.js.erb\";\nimport { roundIdToString } from \"../../../../lib/utils/wcif\";\nimport { centisecondsToClockFormat } from \"../../../../lib/wca-live/attempts\";\nimport { useDispatch } from \"../../../../lib/providers/StoreProvider\";\nimport TimeField from \"../../../Results/WCALive/AttemptResultField/TimeField\";\nimport { updateTimeLimit } from \"../../store/actions\";\nimport ButtonActivatedModal from \"../ButtonActivatedModal\";\nimport TimeLimitDescription from \"./TimeLimitDescription\";\n\n/**\n * Shows a modal to edit the time limit of a round.\n * @param {Event} wcifEvent\n * @param {Round} wcifRound\n * @returns {React.ReactElement}\n */\nexport default function EditTimeLimitModal(_ref) {\n  var _timeLimit$centisecon, _timeLimit$cumulative;\n  var wcifEvent = _ref.wcifEvent,\n    wcifRound = _ref.wcifRound,\n    disabled = _ref.disabled;\n  var timeLimit = wcifRound.timeLimit;\n  var dispatch = useDispatch();\n  var event = events.byId[wcifEvent.id];\n  var _useState = useState((_timeLimit$centisecon = timeLimit === null || timeLimit === void 0 ? void 0 : timeLimit.centiseconds) !== null && _timeLimit$centisecon !== void 0 ? _timeLimit$centisecon : 0),\n    _useState2 = _slicedToArray(_useState, 2),\n    centiseconds = _useState2[0],\n    setCentiseconds = _useState2[1];\n  var _useState3 = useState((_timeLimit$cumulative = timeLimit === null || timeLimit === void 0 ? void 0 : timeLimit.cumulativeRoundIds) !== null && _timeLimit$cumulative !== void 0 ? _timeLimit$cumulative : []),\n    _useState4 = _slicedToArray(_useState3, 2),\n    cumulativeRoundIds = _useState4[0],\n    setCumulativeRoundIds = _useState4[1];\n  var Trigger = useMemo(function () {\n    if (!timeLimit) {\n      return '-';\n    }\n    var timeStr = centisecondsToClockFormat(timeLimit.centiseconds);\n    var str;\n    switch (timeLimit.cumulativeRoundIds.length) {\n      case 0:\n        str = timeStr;\n        break;\n      case 1:\n        str = \"\".concat(timeStr, \" cumulative\");\n        break;\n      default:\n        str = \"\".concat(timeStr, \" total for \").concat(timeLimit.cumulativeRoundIds.join(', '));\n        break;\n    }\n    return str;\n  }, [timeLimit]);\n  var Title = useMemo(function () {\n    return \"Time limit for \".concat(roundIdToString(wcifRound.id));\n  }, [wcifRound.id]);\n  if (!event.canChangeTimeLimit) {\n    return null;\n  }\n  var hasUnsavedChanges = function hasUnsavedChanges() {\n    return !_isEqual(timeLimit, {\n      centiseconds: centiseconds,\n      cumulativeRoundIds: cumulativeRoundIds\n    });\n  };\n  var reset = useCallback(function () {\n    var _timeLimit$centisecon2, _timeLimit$cumulative2;\n    setCentiseconds((_timeLimit$centisecon2 = timeLimit === null || timeLimit === void 0 ? void 0 : timeLimit.centiseconds) !== null && _timeLimit$centisecon2 !== void 0 ? _timeLimit$centisecon2 : 0);\n    setCumulativeRoundIds((_timeLimit$cumulative2 = timeLimit === null || timeLimit === void 0 ? void 0 : timeLimit.cumulativeRoundIds) !== null && _timeLimit$cumulative2 !== void 0 ? _timeLimit$cumulative2 : []);\n  }, [timeLimit === null || timeLimit === void 0 ? void 0 : timeLimit.centiseconds, timeLimit === null || timeLimit === void 0 ? void 0 : timeLimit.cumulativeRoundIds]);\n\n  // if a different event updates cumulative time limits, these inputs need resetting\n  useEffect(reset, [reset]);\n  var handleOk = function handleOk() {\n    if (hasUnsavedChanges()) {\n      dispatch(updateTimeLimit(wcifRound.id, {\n        centiseconds: centiseconds,\n        cumulativeRoundIds: cumulativeRoundIds\n      }));\n    }\n    return true;\n  };\n  var handleCumulativeRoundsChange = function handleCumulativeRoundsChange(value) {\n    setCumulativeRoundIds(value);\n    return true;\n  };\n  return /*#__PURE__*/React.createElement(ButtonActivatedModal, {\n    trigger: Trigger,\n    title: Title,\n    onOk: handleOk,\n    reset: reset,\n    hasUnsavedChanges: hasUnsavedChanges(),\n    disabled: disabled,\n    closeOnDocumentClick: false,\n    closeOnDimmerClick: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, \"Time Limit\"), /*#__PURE__*/React.createElement(TimeField, {\n    value: centiseconds,\n    onChange: setCentiseconds,\n    disabled: disabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Form.Field, {\n    inline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Radio, {\n    label: \"per-solve\",\n    name: \"timeLimitType\",\n    value: \"per-solve\",\n    checked: cumulativeRoundIds.length === 0,\n    onChange: function onChange() {\n      return setCumulativeRoundIds([]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Radio, {\n    label: \"cumulative\",\n    name: \"timeLimitType\",\n    value: \"per-solve\",\n    checked: cumulativeRoundIds.length > 0,\n    onChange: function onChange() {\n      return setCumulativeRoundIds([wcifRound.id]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(TimeLimitDescription, {\n    wcifRound: wcifRound,\n    timeLimit: {\n      centiseconds: centiseconds,\n      cumulativeRoundIds: cumulativeRoundIds\n    },\n    onOk: handleCumulativeRoundsChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"names":["React","useCallback","useEffect","useMemo","useState","Form","Label","Radio","events","roundIdToString","centisecondsToClockFormat","useDispatch","TimeField","updateTimeLimit","ButtonActivatedModal","TimeLimitDescription","EditTimeLimitModal","_ref","_timeLimit$centisecon","_timeLimit$cumulative","wcifEvent","wcifRound","disabled","timeLimit","dispatch","event","byId","id","_useState","centiseconds","_useState2","_slicedToArray","setCentiseconds","_useState3","cumulativeRoundIds","_useState4","setCumulativeRoundIds","Trigger","timeStr","str","length","concat","join","Title","canChangeTimeLimit","hasUnsavedChanges","_isEqual","reset","_timeLimit$centisecon2","_timeLimit$cumulative2","handleOk","handleCumulativeRoundsChange","value","createElement","trigger","title","onOk","closeOnDocumentClick","closeOnDimmerClick","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onChange","Field","inline","label","name","checked"],"sources":["/app/WcaOnRails/app/webpacker/components/EditEvents/Modals/EditTimeLimitModal/index.js"],"sourcesContent":["import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport _ from 'lodash';\nimport { Form, Label, Radio } from 'semantic-ui-react';\nimport { events } from '../../../../lib/wca-data.js.erb';\nimport { roundIdToString } from '../../../../lib/utils/wcif';\nimport { centisecondsToClockFormat } from '../../../../lib/wca-live/attempts';\nimport { useDispatch } from '../../../../lib/providers/StoreProvider';\nimport TimeField from '../../../Results/WCALive/AttemptResultField/TimeField';\nimport { updateTimeLimit } from '../../store/actions';\nimport ButtonActivatedModal from '../ButtonActivatedModal';\nimport TimeLimitDescription from './TimeLimitDescription';\n\n/**\n * Shows a modal to edit the time limit of a round.\n * @param {Event} wcifEvent\n * @param {Round} wcifRound\n * @returns {React.ReactElement}\n */\nexport default function EditTimeLimitModal({ wcifEvent, wcifRound, disabled }) {\n  const { timeLimit } = wcifRound;\n  const dispatch = useDispatch();\n  const event = events.byId[wcifEvent.id];\n\n  const [centiseconds, setCentiseconds] = useState(timeLimit?.centiseconds ?? 0);\n  const [cumulativeRoundIds, setCumulativeRoundIds] = useState(timeLimit?.cumulativeRoundIds ?? []);\n\n  const Trigger = useMemo(() => {\n    if (!timeLimit) {\n      return '-';\n    }\n\n    const timeStr = centisecondsToClockFormat(timeLimit.centiseconds);\n\n    let str;\n    switch (timeLimit.cumulativeRoundIds.length) {\n      case 0:\n        str = timeStr;\n        break;\n      case 1:\n        str = `${timeStr} cumulative`;\n        break;\n      default:\n        str = `${timeStr} total for ${timeLimit.cumulativeRoundIds.join(', ')}`;\n        break;\n    }\n\n    return str;\n  }, [timeLimit]);\n\n  const Title = useMemo(() => `Time limit for ${roundIdToString(wcifRound.id)}`, [wcifRound.id]);\n\n  if (!event.canChangeTimeLimit) {\n    return null;\n  }\n\n  const hasUnsavedChanges = () => (\n    !_.isEqual(timeLimit, { centiseconds, cumulativeRoundIds })\n  );\n\n  const reset = useCallback(() => {\n    setCentiseconds(timeLimit?.centiseconds ?? 0);\n    setCumulativeRoundIds(timeLimit?.cumulativeRoundIds ?? []);\n  }, [timeLimit?.centiseconds, timeLimit?.cumulativeRoundIds]);\n\n  // if a different event updates cumulative time limits, these inputs need resetting\n  useEffect(reset, [reset]);\n\n  const handleOk = () => {\n    if (hasUnsavedChanges()) {\n      dispatch(updateTimeLimit(wcifRound.id, { centiseconds, cumulativeRoundIds }));\n    }\n    return true;\n  };\n\n  const handleCumulativeRoundsChange = (value) => {\n    setCumulativeRoundIds(value);\n    return true;\n  };\n\n  return (\n    <ButtonActivatedModal\n      trigger={Trigger}\n      title={Title}\n      onOk={handleOk}\n      reset={reset}\n      hasUnsavedChanges={hasUnsavedChanges()}\n      disabled={disabled}\n      closeOnDocumentClick={false}\n      closeOnDimmerClick={false}\n    >\n      <Label>\n        Time Limit\n      </Label>\n      <TimeField\n        value={centiseconds}\n        onChange={setCentiseconds}\n        disabled={disabled}\n      />\n      <br />\n      <Form.Field inline>\n        <Radio\n          label=\"per-solve\"\n          name=\"timeLimitType\"\n          value=\"per-solve\"\n          checked={cumulativeRoundIds.length === 0}\n          onChange={() => setCumulativeRoundIds([])}\n        />\n        <Radio\n          label=\"cumulative\"\n          name=\"timeLimitType\"\n          value=\"per-solve\"\n          checked={cumulativeRoundIds.length > 0}\n          onChange={() => setCumulativeRoundIds([wcifRound.id])}\n        />\n      </Form.Field>\n      <TimeLimitDescription\n        wcifRound={wcifRound}\n        timeLimit={{ centiseconds, cumulativeRoundIds }}\n        onOk={handleCumulativeRoundsChange}\n      />\n    </ButtonActivatedModal>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}