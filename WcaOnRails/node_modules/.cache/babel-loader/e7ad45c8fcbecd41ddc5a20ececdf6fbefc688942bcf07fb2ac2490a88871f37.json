{"ast":null,"code":"var _jsxFileName = \"/app/WcaOnRails/app/webpacker/lib/utils/competition-table.js\";\nimport React from 'react';\nimport { DateTime, Interval } from 'luxon';\nfunction parseDateString(yyyymmddDateString) {\n  return DateTime.fromFormat(yyyymmddDateString, 'yyyy-MM-dd');\n}\nfunction parseDateTimeString(isoDateTimeString) {\n  return DateTime.fromISO(isoDateTimeString);\n}\nexport function dayDifferenceFromToday(yyyymmddDateString) {\n  var dateLuxon = parseDateString(yyyymmddDateString);\n  var exactDaysDiff = dateLuxon.diffNow('days').days;\n  if (dateLuxon > DateTime.now()) {\n    return Math.ceil(exactDaysDiff);\n  }\n  return Math.floor(exactDaysDiff * -1);\n}\nexport function startYear(competition) {\n  var dateLuxon = parseDateString(competition.end_date);\n  return dateLuxon.year;\n}\nexport function isProbablyOver(competition) {\n  if (!competition.end_date) return false;\n  var dateLuxon = parseDateString(competition.end_date);\n  return dateLuxon < DateTime.now();\n}\nexport function isCancelled(competition) {\n  return !!competition.cancelled_at;\n}\nexport function hasResultsPosted(competition) {\n  return !!competition.results_posted_at;\n}\nexport function isInProgress(competition) {\n  var startDate = parseDateString(competition.start_date);\n  var endDate = parseDateString(competition.end_date);\n  var running = Interval.fromDateTimes(startDate, endDate).contains(DateTime.now());\n  return running && !hasResultsPosted(competition);\n}\nexport function isRegistrationOpenYet(competition) {\n  if (!competition.registration_open) return false;\n  var regOpen = parseDateTimeString(competition.registration_open);\n  return DateTime.now() < regOpen;\n}\nexport function isRegistrationClosedAlready(competition) {\n  if (!competition.registration_close) return false;\n  var regClose = parseDateTimeString(competition.registration_close);\n  return regClose < DateTime.now();\n}\n\n// Currently, the venue attribute of a competition object can be written as markdown,\n// and using third party libraries like react-markdown to parse it requires too much work\nexport function PseudoLinkMarkdown(_ref) {\n  var text = _ref.text;\n  var openBracketIndex = text.indexOf('[');\n  var closeBracketIndex = text.indexOf(']', openBracketIndex);\n  var openParenIndex = text.indexOf('(', closeBracketIndex);\n  var closeParenIndex = text.indexOf(')', openParenIndex);\n  if (openBracketIndex === -1 || closeBracketIndex === -1 || openParenIndex === -1 || closeParenIndex === -1) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 12\n      }\n    }, text);\n  }\n  return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: text.slice(openParenIndex + 1, closeParenIndex),\n    target: \"_blank\",\n    rel: \"noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, text.slice(openBracketIndex + 1, closeBracketIndex)));\n}","map":{"version":3,"names":["React","DateTime","Interval","parseDateString","yyyymmddDateString","fromFormat","parseDateTimeString","isoDateTimeString","fromISO","dayDifferenceFromToday","dateLuxon","exactDaysDiff","diffNow","days","now","Math","ceil","floor","startYear","competition","end_date","year","isProbablyOver","isCancelled","cancelled_at","hasResultsPosted","results_posted_at","isInProgress","startDate","start_date","endDate","running","fromDateTimes","contains","isRegistrationOpenYet","registration_open","regOpen","isRegistrationClosedAlready","registration_close","regClose","PseudoLinkMarkdown","_ref","text","openBracketIndex","indexOf","closeBracketIndex","openParenIndex","closeParenIndex","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","href","slice","target","rel"],"sources":["/app/WcaOnRails/app/webpacker/lib/utils/competition-table.js"],"sourcesContent":["import React from 'react';\nimport { DateTime, Interval } from 'luxon';\n\nfunction parseDateString(yyyymmddDateString) {\n  return DateTime.fromFormat(yyyymmddDateString, 'yyyy-MM-dd');\n}\n\nfunction parseDateTimeString(isoDateTimeString) {\n  return DateTime.fromISO(isoDateTimeString);\n}\n\nexport function dayDifferenceFromToday(yyyymmddDateString) {\n  const dateLuxon = parseDateString(yyyymmddDateString);\n  const exactDaysDiff = dateLuxon.diffNow('days').days;\n\n  if (dateLuxon > DateTime.now()) {\n    return Math.ceil(exactDaysDiff);\n  }\n\n  return Math.floor(exactDaysDiff * -1);\n}\n\nexport function startYear(competition) {\n  const dateLuxon = parseDateString(competition.end_date);\n  return dateLuxon.year;\n}\n\nexport function isProbablyOver(competition) {\n  if (!competition.end_date) return false;\n\n  const dateLuxon = parseDateString(competition.end_date);\n  return dateLuxon < DateTime.now();\n}\n\nexport function isCancelled(competition) {\n  return !!competition.cancelled_at;\n}\n\nexport function hasResultsPosted(competition) {\n  return !!competition.results_posted_at;\n}\n\nexport function isInProgress(competition) {\n  const startDate = parseDateString(competition.start_date);\n  const endDate = parseDateString(competition.end_date);\n\n  const running = Interval.fromDateTimes(startDate, endDate).contains(DateTime.now());\n\n  return running && !hasResultsPosted(competition);\n}\n\nexport function isRegistrationOpenYet(competition) {\n  if (!competition.registration_open) return false;\n\n  const regOpen = parseDateTimeString(competition.registration_open);\n  return DateTime.now() < regOpen;\n}\n\nexport function isRegistrationClosedAlready(competition) {\n  if (!competition.registration_close) return false;\n\n  const regClose = parseDateTimeString(competition.registration_close);\n  return regClose < DateTime.now();\n}\n\n// Currently, the venue attribute of a competition object can be written as markdown,\n// and using third party libraries like react-markdown to parse it requires too much work\nexport function PseudoLinkMarkdown({ text }) {\n  const openBracketIndex = text.indexOf('[');\n  const closeBracketIndex = text.indexOf(']', openBracketIndex);\n  const openParenIndex = text.indexOf('(', closeBracketIndex);\n  const closeParenIndex = text.indexOf(')', openParenIndex);\n\n  if (openBracketIndex === -1 || closeBracketIndex === -1\n    || openParenIndex === -1 || closeParenIndex === -1) {\n    return <p>{text}</p>;\n  }\n\n  return (\n    <p>\n      <a href={text.slice(openParenIndex + 1, closeParenIndex)} target=\"_blank\" rel=\"noreferrer\">\n        {text.slice(openBracketIndex + 1, closeBracketIndex)}\n      </a>\n    </p>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}