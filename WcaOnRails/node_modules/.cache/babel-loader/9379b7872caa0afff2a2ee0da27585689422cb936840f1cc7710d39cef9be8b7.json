{"ast":null,"code":"/* Import the bundled library explicitly, otherwise we end up importing transpiled ES6 module. */\nimport AutoNumeric from 'autonumeric/dist/autoNumeric';\nimport { currenciesData } from \"./wca-data.js.erb\";\nfunction getCurrencyInfo(isoCode) {\n  return currenciesData.byIso[isoCode] || currenciesData.byIso.USD;\n}\n\n// Retrieve the real value, in the currency's lowest denomination\n// Assumes autoNumeric is running on element, and the number of subunit_to_unit has been set in data\nfunction getValueInCurrency($element) {\n  var currentVal = $element.data('autoNumericObject').getNumber();\n  var multiplier = $.data($element[0], 'current_subunit_to_unit');\n  if ($element.data('autoNumericObject').getNumericString() === '') {\n    return null;\n  }\n  // Set back the value to the \"lowest denomination\" in the currency\n  return currentVal * multiplier;\n}\n\n// Create a mask for an amount input in the given currency, using autoNumeric\n// 'action' can be either \"init\" or \"update\"\n// '$element' is a jquery element for the targeted input field\nfunction applyCurrencyMask(action, $element, currencyIsoCode) {\n  var entry = getCurrencyInfo(currencyIsoCode);\n  var currentVal;\n\n  // Get current val\n  if (action === 'update') {\n    currentVal = getValueInCurrency($element);\n  } else if (action === 'init') {\n    currentVal = $element.val();\n    if (currentVal === '') {\n      currentVal = null;\n    }\n  } else {\n    throw new Error('Unsupported action for currency mask');\n  }\n\n  // Reconfigure\n  $.data($element[0], 'current_subunit_to_unit', entry.subunitToUnit);\n  var maskOptions = {\n    currencySymbol: entry.symbol,\n    currencySymbolPlacement: entry.symbolFirst ? 'p' : 's',\n    // If the currency has no subunit (subunit_to_unit is 1), then we don't need\n    // decimals. For currencies with subunits we want to show decimals.\n    decimalPlaces: entry.subunitToUnit === 1 ? 0 : 2,\n    showWarnings: false,\n    modifyValueOnWheel: false\n  };\n  var autoNumericObject = $element.data('autoNumericObject');\n  if (autoNumericObject) {\n    autoNumericObject.update(maskOptions);\n  } else {\n    autoNumericObject = new AutoNumeric($element[0], maskOptions);\n    $element.data('autoNumericObject', autoNumericObject);\n  }\n\n  // Set new val\n  autoNumericObject.set(currentVal === null ? null : currentVal / entry.subunitToUnit);\n}\n\n// Setup the mask for the selected element\nfunction setupCurrencyMask($element) {\n  var currencyIsoCode = $element.data('currency');\n  var targetElemId = $element.data('target');\n  applyCurrencyMask('init', $element, currencyIsoCode);\n\n  // Populate the actual hidden field on change\n  $element.change(function () {\n    $(targetElemId).val(getValueInCurrency($element)).trigger('change');\n  });\n}\n$(function () {\n  $('.wca-currency-mask').each(function (index, element) {\n    var $element = $(element);\n    var $currencySelector = $($element.data('currencySelector'));\n    setupCurrencyMask($element);\n    $currencySelector.change(function () {\n      applyCurrencyMask('update', $element, $currencySelector.val());\n    });\n  });\n});","map":{"version":3,"names":["AutoNumeric","currenciesData","getCurrencyInfo","isoCode","byIso","USD","getValueInCurrency","$element","currentVal","data","getNumber","multiplier","$","getNumericString","applyCurrencyMask","action","currencyIsoCode","entry","val","Error","subunitToUnit","maskOptions","currencySymbol","symbol","currencySymbolPlacement","symbolFirst","decimalPlaces","showWarnings","modifyValueOnWheel","autoNumericObject","update","set","setupCurrencyMask","targetElemId","change","trigger","each","index","element","$currencySelector"],"sources":["/app/WcaOnRails/app/webpacker/lib/auto-numeric.js"],"sourcesContent":["/* Import the bundled library explicitly, otherwise we end up importing transpiled ES6 module. */\nimport AutoNumeric from 'autonumeric/dist/autoNumeric';\nimport { currenciesData } from './wca-data.js.erb';\n\nfunction getCurrencyInfo(isoCode) {\n  return currenciesData.byIso[isoCode] || currenciesData.byIso.USD;\n}\n\n// Retrieve the real value, in the currency's lowest denomination\n// Assumes autoNumeric is running on element, and the number of subunit_to_unit has been set in data\nfunction getValueInCurrency($element) {\n  const currentVal = $element.data('autoNumericObject').getNumber();\n  const multiplier = $.data($element[0], 'current_subunit_to_unit');\n  if ($element.data('autoNumericObject').getNumericString() === '') {\n    return null;\n  }\n  // Set back the value to the \"lowest denomination\" in the currency\n  return currentVal * multiplier;\n}\n\n// Create a mask for an amount input in the given currency, using autoNumeric\n// 'action' can be either \"init\" or \"update\"\n// '$element' is a jquery element for the targeted input field\nfunction applyCurrencyMask(action, $element, currencyIsoCode) {\n  const entry = getCurrencyInfo(currencyIsoCode);\n  let currentVal;\n\n  // Get current val\n  if (action === 'update') {\n    currentVal = getValueInCurrency($element);\n  } else if (action === 'init') {\n    currentVal = $element.val();\n    if (currentVal === '') {\n      currentVal = null;\n    }\n  } else {\n    throw new Error('Unsupported action for currency mask');\n  }\n\n  // Reconfigure\n  $.data($element[0], 'current_subunit_to_unit', entry.subunitToUnit);\n  const maskOptions = {\n    currencySymbol: entry.symbol,\n    currencySymbolPlacement: entry.symbolFirst ? 'p' : 's',\n    // If the currency has no subunit (subunit_to_unit is 1), then we don't need\n    // decimals. For currencies with subunits we want to show decimals.\n    decimalPlaces: (entry.subunitToUnit === 1) ? 0 : 2,\n    showWarnings: false,\n    modifyValueOnWheel: false,\n  };\n\n  let autoNumericObject = $element.data('autoNumericObject');\n\n  if (autoNumericObject) {\n    autoNumericObject.update(maskOptions);\n  } else {\n    autoNumericObject = new AutoNumeric($element[0], maskOptions);\n    $element.data('autoNumericObject', autoNumericObject);\n  }\n\n  // Set new val\n  autoNumericObject.set(currentVal === null ? null : currentVal / entry.subunitToUnit);\n}\n\n// Setup the mask for the selected element\nfunction setupCurrencyMask($element) {\n  const currencyIsoCode = $element.data('currency');\n  const targetElemId = $element.data('target');\n\n  applyCurrencyMask('init', $element, currencyIsoCode);\n\n  // Populate the actual hidden field on change\n  $element.change(() => {\n    $(targetElemId).val(getValueInCurrency($element)).trigger('change');\n  });\n}\n\n$(() => {\n  $('.wca-currency-mask').each((index, element) => {\n    const $element = $(element);\n    const $currencySelector = $($element.data('currencySelector'));\n\n    setupCurrencyMask($element);\n    $currencySelector.change(() => {\n      applyCurrencyMask('update', $element, $currencySelector.val());\n    });\n  });\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}