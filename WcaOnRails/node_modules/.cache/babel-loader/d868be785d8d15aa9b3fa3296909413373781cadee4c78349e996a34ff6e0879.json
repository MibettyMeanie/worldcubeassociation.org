{"ast":null,"code":"import _remove from \"lodash/remove\";\nimport _isEqual from \"lodash/isEqual\";\nvar _jsxFileName = \"/app/WcaOnRails/app/webpacker/components/EditEvents/index.js\";\nimport React, { useCallback, useEffect, useMemo } from 'react';\nimport { Button, Card, Message } from 'semantic-ui-react';\nimport { events } from \"../../lib/wca-data.js.erb\";\nimport { useSaveWcifAction } from \"../../lib/utils/wcif\";\nimport EventPanel from \"./EventPanel\";\nimport { changesSaved } from \"./store/actions\";\nimport wcifEventsReducer from \"./store/reducer\";\nimport Store, { useDispatch, useStore } from \"../../lib/providers/StoreProvider\";\nimport ConfirmProvider from \"../../lib/providers/ConfirmProvider\";\nfunction EditEvents() {\n  var _this = this;\n  var _useStore = useStore(),\n    competitionId = _useStore.competitionId,\n    wcifEvents = _useStore.wcifEvents,\n    initialWcifEvents = _useStore.initialWcifEvents;\n  var dispatch = useDispatch();\n  var unsavedChanges = useMemo(function () {\n    return !_isEqual(wcifEvents, initialWcifEvents);\n  }, [wcifEvents, initialWcifEvents]);\n  var onUnload = useCallback(function (e) {\n    // Prompt the user before letting them navigate away from this page with unsaved changes.\n    if (unsavedChanges) {\n      var confirmationMessage = 'You have unsaved changes, are you sure you want to leave?';\n      e.returnValue = confirmationMessage;\n      return confirmationMessage;\n    }\n    return null;\n  }, [unsavedChanges]);\n  useEffect(function () {\n    window.addEventListener('beforeunload', onUnload);\n    return function () {\n      window.removeEventListener('beforeunload', onUnload);\n    };\n  }, [onUnload]);\n  var _useSaveWcifAction = useSaveWcifAction(),\n    saveWcif = _useSaveWcifAction.saveWcif,\n    saving = _useSaveWcifAction.saving;\n  var save = useCallback(function () {\n    saveWcif(competitionId, {\n      events: wcifEvents\n    }, function () {\n      return dispatch(changesSaved());\n    });\n  }, [competitionId, dispatch, saveWcif, wcifEvents]);\n  var renderUnsavedChangesAlert = function renderUnsavedChangesAlert() {\n    return /*#__PURE__*/React.createElement(Message, {\n      color: \"blue\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }\n    }, \"You have unsaved changes. Don't forget to\", ' ', /*#__PURE__*/React.createElement(Button, {\n      onClick: save,\n      disabled: saving,\n      loading: saving,\n      color: \"blue\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, \"save your changes!\"));\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, unsavedChanges && renderUnsavedChangesAlert(), /*#__PURE__*/React.createElement(Card.Group, {\n    itemsPerRow: 3,\n    className: \"stackable\"\n    // this is necessary so that the cards \"wrap\" instead of growing to match the longest card\n    ,\n    style: {\n      alignItems: 'baseline'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, wcifEvents.map(function (wcifEvent) {\n    return /*#__PURE__*/React.createElement(EventPanel, {\n      key: wcifEvent.id,\n      wcifEvent: wcifEvent,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    });\n  })), unsavedChanges && renderUnsavedChangesAlert());\n}\nfunction normalizeWcifEvents(wcifEvents) {\n  // Since we want to support deprecated events and be able to edit their rounds,\n  // we want to show deprecated events if they exist in the WCIF, but not if they\n  // don't.\n  // Therefore we first build the list of events from the official one, updating\n  // it with WCIF data if any.\n  // And then we add all events that are still in the WCIF (which means they are\n  // not official anymore).\n  var ret = events.official.map(function (event) {\n    return _remove(wcifEvents, {\n      id: event.id\n    })[0] || {\n      id: event.id,\n      rounds: null\n    };\n  });\n  return ret.concat(wcifEvents);\n}\nexport default function Wrapper(_ref) {\n  var competitionId = _ref.competitionId,\n    canAddAndRemoveEvents = _ref.canAddAndRemoveEvents,\n    canUpdateEvents = _ref.canUpdateEvents,\n    canUpdateQualifications = _ref.canUpdateQualifications,\n    wcifEvents = _ref.wcifEvents;\n  var normalizedEvents = normalizeWcifEvents(wcifEvents);\n  return /*#__PURE__*/React.createElement(Store, {\n    reducer: wcifEventsReducer,\n    initialState: {\n      competitionId: competitionId,\n      canAddAndRemoveEvents: canAddAndRemoveEvents,\n      canUpdateEvents: canUpdateEvents,\n      canUpdateQualifications: canUpdateQualifications,\n      wcifEvents: normalizedEvents,\n      initialWcifEvents: normalizedEvents,\n      unsavedChanges: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ConfirmProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(EditEvents, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"names":["React","useCallback","useEffect","useMemo","Button","Card","Message","events","useSaveWcifAction","EventPanel","changesSaved","wcifEventsReducer","Store","useDispatch","useStore","ConfirmProvider","EditEvents","_this","_useStore","competitionId","wcifEvents","initialWcifEvents","dispatch","unsavedChanges","_isEqual","onUnload","e","confirmationMessage","returnValue","window","addEventListener","removeEventListener","_useSaveWcifAction","saveWcif","saving","save","renderUnsavedChangesAlert","createElement","color","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","loading","Fragment","Group","itemsPerRow","className","style","alignItems","map","wcifEvent","key","id","normalizeWcifEvents","ret","official","event","_remove","rounds","concat","Wrapper","_ref","canAddAndRemoveEvents","canUpdateEvents","canUpdateQualifications","normalizedEvents","reducer","initialState"],"sources":["/app/WcaOnRails/app/webpacker/components/EditEvents/index.js"],"sourcesContent":["import React, {\n  useCallback,\n  useEffect,\n  useMemo,\n} from 'react';\nimport _ from 'lodash';\n\nimport { Button, Card, Message } from 'semantic-ui-react';\nimport { events } from '../../lib/wca-data.js.erb';\n\nimport { useSaveWcifAction } from '../../lib/utils/wcif';\nimport EventPanel from './EventPanel';\nimport { changesSaved } from './store/actions';\nimport wcifEventsReducer from './store/reducer';\nimport Store, { useDispatch, useStore } from '../../lib/providers/StoreProvider';\nimport ConfirmProvider from '../../lib/providers/ConfirmProvider';\n\nfunction EditEvents() {\n  const {\n    competitionId, wcifEvents, initialWcifEvents,\n  } = useStore();\n  const dispatch = useDispatch();\n\n  const unsavedChanges = useMemo(() => (\n    !_.isEqual(wcifEvents, initialWcifEvents)\n  ), [wcifEvents, initialWcifEvents]);\n\n  const onUnload = useCallback((e) => {\n    // Prompt the user before letting them navigate away from this page with unsaved changes.\n    if (unsavedChanges) {\n      const confirmationMessage = 'You have unsaved changes, are you sure you want to leave?';\n      e.returnValue = confirmationMessage;\n      return confirmationMessage;\n    }\n\n    return null;\n  }, [unsavedChanges]);\n\n  useEffect(() => {\n    window.addEventListener('beforeunload', onUnload);\n\n    return () => {\n      window.removeEventListener('beforeunload', onUnload);\n    };\n  }, [onUnload]);\n\n  const { saveWcif, saving } = useSaveWcifAction();\n\n  const save = useCallback(() => {\n    saveWcif(\n      competitionId,\n      { events: wcifEvents },\n      () => dispatch(changesSaved()),\n    );\n  }, [competitionId, dispatch, saveWcif, wcifEvents]);\n\n  const renderUnsavedChangesAlert = () => (\n    <Message color=\"blue\">\n      You have unsaved changes. Don&apos;t forget to\n      {' '}\n      <Button\n        onClick={save}\n        disabled={saving}\n        loading={saving}\n        color=\"blue\"\n      >\n        save your changes!\n      </Button>\n    </Message>\n  );\n\n  return (\n    <>\n      {unsavedChanges && renderUnsavedChangesAlert()}\n      <Card.Group\n        itemsPerRow={3}\n        className=\"stackable\"\n        // this is necessary so that the cards \"wrap\" instead of growing to match the longest card\n        style={{ alignItems: 'baseline' }}\n      >\n        {wcifEvents.map((wcifEvent) => (\n          <EventPanel key={wcifEvent.id} wcifEvent={wcifEvent} />\n        ))}\n      </Card.Group>\n      {unsavedChanges && renderUnsavedChangesAlert()}\n    </>\n  );\n}\n\nfunction normalizeWcifEvents(wcifEvents) {\n  // Since we want to support deprecated events and be able to edit their rounds,\n  // we want to show deprecated events if they exist in the WCIF, but not if they\n  // don't.\n  // Therefore we first build the list of events from the official one, updating\n  // it with WCIF data if any.\n  // And then we add all events that are still in the WCIF (which means they are\n  // not official anymore).\n  const ret = events.official.map(\n    (event) => _.remove(wcifEvents, { id: event.id })[0] || {\n      id: event.id,\n      rounds: null,\n    },\n  );\n  return ret.concat(wcifEvents);\n}\n\nexport default function Wrapper({\n  competitionId,\n  canAddAndRemoveEvents,\n  canUpdateEvents,\n  canUpdateQualifications,\n  wcifEvents,\n}) {\n  const normalizedEvents = normalizeWcifEvents(wcifEvents);\n\n  return (\n    <Store\n      reducer={wcifEventsReducer}\n      initialState={{\n        competitionId,\n        canAddAndRemoveEvents,\n        canUpdateEvents,\n        canUpdateQualifications,\n        wcifEvents: normalizedEvents,\n        initialWcifEvents: normalizedEvents,\n        unsavedChanges: false,\n      }}\n    >\n      <ConfirmProvider>\n        <EditEvents />\n      </ConfirmProvider>\n    </Store>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}