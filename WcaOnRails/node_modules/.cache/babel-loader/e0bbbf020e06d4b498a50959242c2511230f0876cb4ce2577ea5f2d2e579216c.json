{"ast":null,"code":"import { I18n } from 'i18n-js';\nvar i18nFileContext = require.context('rails_translations');\nvar DEFAULT_LOCALE = 'en';\n\n/**\n * Use when I18n.t should return an array.\n * Guards against non-arrays and removes empty elements from array.\n * @param {string | string[]} scope\n * @param {*} options\n * @returns {string[]}\n */\nfunction tArray(scope, options) {\n  var res = window.I18n.t(scope, options);\n  if (typeof res === 'object') {\n    var resKeys = Object.keys(res);\n    var maybeNumericKeys = resKeys.map(Number);\n    maybeNumericKeys.sort();\n\n    // Our i18n export library changed behavior in a minor version bump (sigh…) to maintain numeric\n    // keys as JS objects even when the keys clearly indicate index ordering, implying an array.\n    // We need to circumvent this behavior because we rely on external tools for our translators,\n    // which require the YML to contain string keys (instead \"proper\" YML arrays)\n    var isPseudoArray = maybeNumericKeys.every(function (key, idx) {\n      return key === idx + 1;\n    });\n    if (isPseudoArray) {\n      res = maybeNumericKeys.map(function (key) {\n        return res[key.toString()];\n      });\n    }\n  }\n  if (!Array.isArray(res)) {\n    // throw errors in same style as I18n.t:\n    // return a valid result, just the error message not the content.\n    return [\"Expected Array from: \".concat(scope)];\n  }\n  return res.filter(Boolean);\n}\nwindow.I18n = window.I18n || new I18n();\n\n// We always load English + the user locale so that we can fallback.\nwindow.I18n.defaultLocale = DEFAULT_LOCALE;\nwindow.I18n.enableFallback = true;\n// load the actual locale as determined by app/views/layouts/application.html.erb\nwindow.I18n.locale = window.wca.currentLocale;\nwindow.I18n.tArray = tArray;\n\n/**\n * The global translation object.\n *\n * @example\n *  import I18n from '../../lib/i18n';\n *  I18n.t('regional_organizations.requirements.title'); // -> string\n *  I18n.tArray('regional_organizations.requirements.list'); // -> string[]\n *\n * @type {I18n & {\n *  tArray: (scope: string | string[], options?: *) => string[]\n * }}\n */\nexport default window.I18n;\nfunction loadTranslations(i18n, locale) {\n  var translations = i18nFileContext(\"./\".concat(locale, \".json\"));\n  i18n.store(translations);\n}\n\n// store the actual translations.\nloadTranslations(window.I18n, DEFAULT_LOCALE);\nloadTranslations(window.I18n, window.wca.currentLocale);","map":{"version":3,"names":["I18n","i18nFileContext","require","context","DEFAULT_LOCALE","tArray","scope","options","res","window","t","resKeys","Object","keys","maybeNumericKeys","map","Number","sort","isPseudoArray","every","key","idx","toString","Array","isArray","concat","filter","Boolean","defaultLocale","enableFallback","locale","wca","currentLocale","loadTranslations","i18n","translations","store"],"sources":["/app/WcaOnRails/app/webpacker/lib/i18n.js"],"sourcesContent":["import { I18n } from 'i18n-js';\n\nconst i18nFileContext = require.context('rails_translations');\n\nconst DEFAULT_LOCALE = 'en';\n\n/**\n * Use when I18n.t should return an array.\n * Guards against non-arrays and removes empty elements from array.\n * @param {string | string[]} scope\n * @param {*} options\n * @returns {string[]}\n */\nfunction tArray(scope, options) {\n  let res = window.I18n.t(scope, options);\n\n  if (typeof res === 'object') {\n    const resKeys = Object.keys(res);\n\n    const maybeNumericKeys = resKeys.map(Number);\n    maybeNumericKeys.sort();\n\n    // Our i18n export library changed behavior in a minor version bump (sigh…) to maintain numeric\n    // keys as JS objects even when the keys clearly indicate index ordering, implying an array.\n    // We need to circumvent this behavior because we rely on external tools for our translators,\n    // which require the YML to contain string keys (instead \"proper\" YML arrays)\n    const isPseudoArray = maybeNumericKeys.every((key, idx) => key === (idx + 1));\n\n    if (isPseudoArray) {\n      res = maybeNumericKeys.map((key) => res[key.toString()]);\n    }\n  }\n\n  if (!Array.isArray(res)) {\n    // throw errors in same style as I18n.t:\n    // return a valid result, just the error message not the content.\n    return [`Expected Array from: ${scope}`];\n  }\n\n  return res.filter(Boolean);\n}\n\nwindow.I18n = window.I18n || new I18n();\n\n// We always load English + the user locale so that we can fallback.\nwindow.I18n.defaultLocale = DEFAULT_LOCALE;\nwindow.I18n.enableFallback = true;\n// load the actual locale as determined by app/views/layouts/application.html.erb\nwindow.I18n.locale = window.wca.currentLocale;\nwindow.I18n.tArray = tArray;\n\n/**\n * The global translation object.\n *\n * @example\n *  import I18n from '../../lib/i18n';\n *  I18n.t('regional_organizations.requirements.title'); // -> string\n *  I18n.tArray('regional_organizations.requirements.list'); // -> string[]\n *\n * @type {I18n & {\n *  tArray: (scope: string | string[], options?: *) => string[]\n * }}\n */\nexport default window.I18n;\n\nfunction loadTranslations(i18n, locale) {\n  const translations = i18nFileContext(`./${locale}.json`);\n  i18n.store(translations);\n}\n\n// store the actual translations.\nloadTranslations(window.I18n, DEFAULT_LOCALE);\nloadTranslations(window.I18n, window.wca.currentLocale);\n"],"mappings":"AAAA,SAASA,IAAI,QAAQ,SAAS;AAE9B,IAAMC,eAAe,GAAGC,OAAO,CAACC,OAAO,CAAC,oBAAoB,CAAC;AAE7D,IAAMC,cAAc,GAAG,IAAI;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,MAAMA,CAACC,KAAK,EAAEC,OAAO,EAAE;EAC9B,IAAIC,GAAG,GAAGC,MAAM,CAACT,IAAI,CAACU,CAAC,CAACJ,KAAK,EAAEC,OAAO,CAAC;EAEvC,IAAI,OAAOC,GAAG,KAAK,QAAQ,EAAE;IAC3B,IAAMG,OAAO,GAAGC,MAAM,CAACC,IAAI,CAACL,GAAG,CAAC;IAEhC,IAAMM,gBAAgB,GAAGH,OAAO,CAACI,GAAG,CAACC,MAAM,CAAC;IAC5CF,gBAAgB,CAACG,IAAI,CAAC,CAAC;;IAEvB;IACA;IACA;IACA;IACA,IAAMC,aAAa,GAAGJ,gBAAgB,CAACK,KAAK,CAAC,UAACC,GAAG,EAAEC,GAAG;MAAA,OAAKD,GAAG,KAAMC,GAAG,GAAG,CAAE;IAAA,EAAC;IAE7E,IAAIH,aAAa,EAAE;MACjBV,GAAG,GAAGM,gBAAgB,CAACC,GAAG,CAAC,UAACK,GAAG;QAAA,OAAKZ,GAAG,CAACY,GAAG,CAACE,QAAQ,CAAC,CAAC,CAAC;MAAA,EAAC;IAC1D;EACF;EAEA,IAAI,CAACC,KAAK,CAACC,OAAO,CAAChB,GAAG,CAAC,EAAE;IACvB;IACA;IACA,OAAO,yBAAAiB,MAAA,CAAyBnB,KAAK,EAAG;EAC1C;EAEA,OAAOE,GAAG,CAACkB,MAAM,CAACC,OAAO,CAAC;AAC5B;AAEAlB,MAAM,CAACT,IAAI,GAAGS,MAAM,CAACT,IAAI,IAAI,IAAIA,IAAI,CAAC,CAAC;;AAEvC;AACAS,MAAM,CAACT,IAAI,CAAC4B,aAAa,GAAGxB,cAAc;AAC1CK,MAAM,CAACT,IAAI,CAAC6B,cAAc,GAAG,IAAI;AACjC;AACApB,MAAM,CAACT,IAAI,CAAC8B,MAAM,GAAGrB,MAAM,CAACsB,GAAG,CAACC,aAAa;AAC7CvB,MAAM,CAACT,IAAI,CAACK,MAAM,GAAGA,MAAM;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAeI,MAAM,CAACT,IAAI;AAE1B,SAASiC,gBAAgBA,CAACC,IAAI,EAAEJ,MAAM,EAAE;EACtC,IAAMK,YAAY,GAAGlC,eAAe,MAAAwB,MAAA,CAAMK,MAAM,UAAO,CAAC;EACxDI,IAAI,CAACE,KAAK,CAACD,YAAY,CAAC;AAC1B;;AAEA;AACAF,gBAAgB,CAACxB,MAAM,CAACT,IAAI,EAAEI,cAAc,CAAC;AAC7C6B,gBAAgB,CAACxB,MAAM,CAACT,IAAI,EAAES,MAAM,CAACsB,GAAG,CAACC,aAAa,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}