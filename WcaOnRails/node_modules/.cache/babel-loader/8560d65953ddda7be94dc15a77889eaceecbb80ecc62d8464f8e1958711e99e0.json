{"ast":null,"code":"var _jsxFileName = \"/app/WcaOnRails/app/webpacker/components/EditEvents/EventPanel/RoundRow.js\";\nimport React from 'react';\nimport { Dropdown, Input, Table } from 'semantic-ui-react';\nimport { events, formats } from \"../../../lib/wca-data.js.erb\";\nimport { roundIdToString } from \"../../../lib/utils/wcif\";\nimport { EditAdvancementConditionModal, EditTimeLimitModal, EditCutoffModal } from \"../Modals\";\nimport { useDispatch } from \"../../../lib/providers/StoreProvider\";\nimport { useConfirm } from \"../../../lib/providers/ConfirmProvider\";\nimport { updateRoundFormat, setScrambleSetCount, updateCutoff } from \"../store/actions\";\nexport default function RoundRow(_ref) {\n  var index = _ref.index,\n    wcifRound = _ref.wcifRound,\n    wcifEvent = _ref.wcifEvent,\n    disabled = _ref.disabled;\n  var dispatch = useDispatch();\n  var confirm = useConfirm();\n  var event = events.byId[wcifEvent.id];\n  var roundNumber = index + 1;\n  var isLastRound = roundNumber === wcifEvent.rounds.length;\n  var roundFormatChanged = function roundFormatChanged(e, _ref2) {\n    var value = _ref2.value;\n    var newFormat = value;\n    if (wcifRound.cutoff && !formats.byId[newFormat].allowedFirstPhaseFormats.includes(wcifRound.cutoff.numberOfAttempts.toString())) {\n      // if the format is changing to a format that doesn't have a cutoff\n      confirm({\n        content: \"Are you sure you want to change the format of \".concat(roundIdToString(wcifRound.id), \"? This will clear the cutoff\")\n      }).then(function () {\n        dispatch(updateRoundFormat(wcifRound.id, newFormat));\n        dispatch(updateCutoff(wcifRound.id, null));\n      });\n    } else {\n      // if the format is changing to a format that has a cutoff\n      dispatch(updateRoundFormat(wcifRound.id, newFormat));\n    }\n  };\n  var scrambleSetCountChanged = function scrambleSetCountChanged(e) {\n    dispatch(setScrambleSetCount(wcifRound.id, parseInt(e.target.value, 10)));\n  };\n  return /*#__PURE__*/React.createElement(Table.Row, {\n    verticalAlign: \"middle\",\n    name: \"round-\".concat(roundNumber),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Table.Cell, {\n    verticalAlign: \"middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, wcifRound.id.split('-')[1].replace('r', '')), /*#__PURE__*/React.createElement(Table.Cell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown, {\n    selection: true,\n    name: \"format\",\n    value: wcifRound.format,\n    onChange: roundFormatChanged,\n    disabled: disabled,\n    options: event.formats().map(function (format) {\n      return {\n        key: format.id,\n        value: format.id,\n        text: format.shortName\n      };\n    }),\n    compact: true,\n    className: \"tiny\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Table.Cell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"scrambleSetCount\",\n    type: \"number\",\n    min: 1\n    // This is arbitrary, but HTML uses this property to compute the width of the input box.\n    // No max property means HTML thinks \"this number could be 13247324871321,\n    // so better make the box very very wide!\"\n    ,\n    max: 1000,\n    value: wcifRound.scrambleSetCount,\n    onChange: scrambleSetCountChanged,\n    disabled: disabled,\n    className: \"tiny\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  })), event.canChangeTimeLimit && /*#__PURE__*/React.createElement(Table.Cell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(EditTimeLimitModal, {\n    wcifEvent: wcifEvent,\n    wcifRound: wcifRound,\n    roundNumber: roundNumber,\n    disabled: disabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  })), event.canHaveCutoff && /*#__PURE__*/React.createElement(Table.Cell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(EditCutoffModal, {\n    wcifEvent: wcifEvent,\n    wcifRound: wcifRound,\n    roundNumber: roundNumber,\n    disabled: disabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Table.Cell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, !isLastRound && /*#__PURE__*/React.createElement(EditAdvancementConditionModal, {\n    wcifEvent: wcifEvent,\n    wcifRound: wcifRound,\n    roundNumber: roundNumber,\n    disabled: disabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  })));\n}","map":{"version":3,"names":["React","Dropdown","Input","Table","events","formats","roundIdToString","EditAdvancementConditionModal","EditTimeLimitModal","EditCutoffModal","useDispatch","useConfirm","updateRoundFormat","setScrambleSetCount","updateCutoff","RoundRow","_ref","index","wcifRound","wcifEvent","disabled","dispatch","confirm","event","byId","id","roundNumber","isLastRound","rounds","length","roundFormatChanged","e","_ref2","value","newFormat","cutoff","allowedFirstPhaseFormats","includes","numberOfAttempts","toString","content","concat","then","scrambleSetCountChanged","parseInt","target","createElement","Row","verticalAlign","name","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Cell","split","replace","selection","format","onChange","options","map","key","text","shortName","compact","className","type","min","max","scrambleSetCount","canChangeTimeLimit","canHaveCutoff"],"sources":["/app/WcaOnRails/app/webpacker/components/EditEvents/EventPanel/RoundRow.js"],"sourcesContent":["import React from 'react';\n\nimport {\n  Dropdown, Input, Table,\n} from 'semantic-ui-react';\nimport { events, formats } from '../../../lib/wca-data.js.erb';\nimport { roundIdToString } from '../../../lib/utils/wcif';\n\nimport {\n  EditAdvancementConditionModal, EditTimeLimitModal, EditCutoffModal,\n} from '../Modals';\nimport { useDispatch } from '../../../lib/providers/StoreProvider';\nimport { useConfirm } from '../../../lib/providers/ConfirmProvider';\nimport { updateRoundFormat, setScrambleSetCount, updateCutoff } from '../store/actions';\n\nexport default function RoundRow({\n  index, wcifRound, wcifEvent, disabled,\n}) {\n  const dispatch = useDispatch();\n  const confirm = useConfirm();\n  const event = events.byId[wcifEvent.id];\n\n  const roundNumber = index + 1;\n  const isLastRound = roundNumber === wcifEvent.rounds.length;\n\n  const roundFormatChanged = (e, { value }) => {\n    const newFormat = value;\n\n    if (\n      wcifRound.cutoff\n      && !formats.byId[newFormat].allowedFirstPhaseFormats.includes(\n        wcifRound.cutoff.numberOfAttempts.toString(),\n      )\n    ) {\n      // if the format is changing to a format that doesn't have a cutoff\n      confirm({\n        content: `Are you sure you want to change the format of ${roundIdToString(wcifRound.id)}? This will clear the cutoff`,\n      })\n        .then(() => {\n          dispatch(updateRoundFormat(wcifRound.id, newFormat));\n          dispatch(updateCutoff(wcifRound.id, null));\n        });\n    } else {\n      // if the format is changing to a format that has a cutoff\n      dispatch(updateRoundFormat(wcifRound.id, newFormat));\n    }\n  };\n\n  const scrambleSetCountChanged = (e) => {\n    dispatch(setScrambleSetCount(wcifRound.id, parseInt(e.target.value, 10)));\n  };\n\n  return (\n    <Table.Row\n      verticalAlign=\"middle\"\n      name={`round-${roundNumber}`}\n    >\n      <Table.Cell verticalAlign=\"middle\">\n        {wcifRound.id.split('-')[1].replace('r', '')}\n      </Table.Cell>\n      <Table.Cell>\n        <Dropdown\n          selection\n          name=\"format\"\n          value={wcifRound.format}\n          onChange={roundFormatChanged}\n          disabled={disabled}\n          options={event.formats().map((format) => ({\n            key: format.id,\n            value: format.id,\n            text: format.shortName,\n          }))}\n          compact\n          className=\"tiny\"\n        />\n      </Table.Cell>\n\n      <Table.Cell>\n        <Input\n          name=\"scrambleSetCount\"\n          type=\"number\"\n          min={1}\n          // This is arbitrary, but HTML uses this property to compute the width of the input box.\n          // No max property means HTML thinks \"this number could be 13247324871321,\n          // so better make the box very very wide!\"\n          max={1000}\n          value={wcifRound.scrambleSetCount}\n          onChange={scrambleSetCountChanged}\n          disabled={disabled}\n          className=\"tiny\"\n        />\n      </Table.Cell>\n\n      {event.canChangeTimeLimit && (\n        <Table.Cell>\n          <EditTimeLimitModal\n            wcifEvent={wcifEvent}\n            wcifRound={wcifRound}\n            roundNumber={roundNumber}\n            disabled={disabled}\n          />\n        </Table.Cell>\n      )}\n\n      {event.canHaveCutoff && (\n        <Table.Cell>\n          <EditCutoffModal\n            wcifEvent={wcifEvent}\n            wcifRound={wcifRound}\n            roundNumber={roundNumber}\n            disabled={disabled}\n          />\n        </Table.Cell>\n      )}\n\n      <Table.Cell>\n        {!isLastRound && (\n          <EditAdvancementConditionModal\n            wcifEvent={wcifEvent}\n            wcifRound={wcifRound}\n            roundNumber={roundNumber}\n            disabled={disabled}\n          />\n        )}\n      </Table.Cell>\n    </Table.Row>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}