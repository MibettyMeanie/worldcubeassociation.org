{"ast":null,"code":"import _isEqual from \"lodash/isEqual\";\nvar _jsxFileName = \"/app/WcaOnRails/app/webpacker/components/EditEvents/Modals/EditCutoffModal/index.js\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nimport React, { useState } from 'react';\nimport { Label } from 'semantic-ui-react';\nimport { formats } from \"../../../../lib/wca-data.js.erb\";\nimport useInputState from \"../../../../lib/hooks/useInputState\";\nimport { roundIdToString } from \"../../../../lib/utils/wcif\";\nimport { roundCutoffToString } from \"../../utils\";\nimport ButtonActivatedModal from \"../ButtonActivatedModal\";\nimport CutoffFormatField from \"./CutoffFormatInput\";\nimport { useDispatch } from \"../../../../lib/providers/StoreProvider\";\nimport { updateCutoff } from \"../../store/actions\";\nimport AttemptResultField from \"../../../Results/WCALive/AttemptResultField/AttemptResultField\";\nimport MbldPointsField from \"../../../Results/WCALive/AttemptResultField/MbldPointsField\";\n\n/**\n * Developer notes: \"cutoffFormat\" and \"NumberOfAttempts\" is used interchangeably for written clarity\n * A cutoff is made up of a number of attempts and a format.\n * This format is essentially a \"number of attempts\"\n * The cutoff format is stored as \"cutoff.numberOfAttempts\" in the round object in the wcif.\n */\n\n/**\n * Shows a modal to edit the cutoff of a round.\n * @param {Event} wcifEvent\n * @param {Round} wcifRound\n * @returns {React.ReactElement}\n */\nexport default function EditCutoffModal(_ref) {\n  var _cutoff$numberOfAttem, _cutoff$attemptResult;\n  var wcifEvent = _ref.wcifEvent,\n    wcifRound = _ref.wcifRound,\n    disabled = _ref.disabled;\n  var cutoff = wcifRound.cutoff,\n    format = wcifRound.format;\n  var dispatch = useDispatch();\n  var _useInputState = useInputState((_cutoff$numberOfAttem = cutoff === null || cutoff === void 0 ? void 0 : cutoff.numberOfAttempts) !== null && _cutoff$numberOfAttem !== void 0 ? _cutoff$numberOfAttem : 0),\n    _useInputState2 = _slicedToArray(_useInputState, 2),\n    numberOfAttempts = _useInputState2[0],\n    setNumberOfAttempts = _useInputState2[1];\n  var _useState = useState((_cutoff$attemptResult = cutoff === null || cutoff === void 0 ? void 0 : cutoff.attemptResult) !== null && _cutoff$attemptResult !== void 0 ? _cutoff$attemptResult : 0),\n    _useState2 = _slicedToArray(_useState, 2),\n    attemptResult = _useState2[0],\n    setAttemptResult = _useState2[1];\n  var cutoffFormats = formats.byId[format].allowedFirstPhaseFormats;\n  var explanationText = numberOfAttempts > 0 ? roundCutoffToString(_objectSpread(_objectSpread({}, wcifRound), {\n    numberOfAttempts: numberOfAttempts,\n    attemptResult: attemptResult\n  })) : null;\n  var hasUnsavedChanges = function hasUnsavedChanges() {\n    return !_isEqual(cutoff, numberOfAttempts ? {\n      numberOfAttempts: numberOfAttempts,\n      attemptResult: attemptResult\n    } : null);\n  };\n  var reset = function reset() {\n    var _cutoff$numberOfAttem2, _cutoff$attemptResult2;\n    setNumberOfAttempts((_cutoff$numberOfAttem2 = cutoff === null || cutoff === void 0 ? void 0 : cutoff.numberOfAttempts) !== null && _cutoff$numberOfAttem2 !== void 0 ? _cutoff$numberOfAttem2 : 0);\n    setAttemptResult((_cutoff$attemptResult2 = cutoff === null || cutoff === void 0 ? void 0 : cutoff.attemptResult) !== null && _cutoff$attemptResult2 !== void 0 ? _cutoff$attemptResult2 : 0);\n  };\n  var handleOk = function handleOk() {\n    if (hasUnsavedChanges()) {\n      dispatch(updateCutoff(wcifRound.id, numberOfAttempts ? {\n        numberOfAttempts: numberOfAttempts,\n        attemptResult: attemptResult\n      } : null));\n    }\n  };\n  var Title = \"Cutoff for \".concat(roundIdToString(wcifRound.id));\n  var Trigger = roundCutoffToString(wcifRound, {\n    \"short\": true\n  });\n  return /*#__PURE__*/React.createElement(ButtonActivatedModal, {\n    trigger: Trigger,\n    triggerButtonProps: {\n      style: {\n        padding: '0.5em 1em'\n      }\n    },\n    title: Title,\n    reset: reset,\n    onOk: handleOk,\n    hasUnsavedChanges: hasUnsavedChanges(),\n    disabled: disabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CutoffFormatField, {\n    cutoffFormats: cutoffFormats,\n    cutoffFormat: numberOfAttempts,\n    wcifRound: wcifRound,\n    onChange: setNumberOfAttempts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }), numberOfAttempts > 0 && (wcifEvent.id === '333mbf' ? /*#__PURE__*/React.createElement(MbldPointsField, {\n    label: /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 24\n      }\n    }, \"Cutoff Result\"),\n    eventId: wcifEvent.id,\n    value: attemptResult,\n    onChange: setAttemptResult,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(AttemptResultField, {\n    label: /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 24\n      }\n    }, \"Cutoff Result\"),\n    eventId: wcifEvent.id,\n    value: attemptResult,\n    onChange: setAttemptResult,\n    resultType: \"single\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  })), numberOfAttempts < 0 && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 32\n    }\n  }, explanationText));\n}","map":{"version":3,"names":["React","useState","Label","formats","useInputState","roundIdToString","roundCutoffToString","ButtonActivatedModal","CutoffFormatField","useDispatch","updateCutoff","AttemptResultField","MbldPointsField","EditCutoffModal","_ref","_cutoff$numberOfAttem","_cutoff$attemptResult","wcifEvent","wcifRound","disabled","cutoff","format","dispatch","_useInputState","numberOfAttempts","_useInputState2","_slicedToArray","setNumberOfAttempts","_useState","attemptResult","_useState2","setAttemptResult","cutoffFormats","byId","allowedFirstPhaseFormats","explanationText","_objectSpread","hasUnsavedChanges","_isEqual","reset","_cutoff$numberOfAttem2","_cutoff$attemptResult2","handleOk","id","Title","concat","Trigger","createElement","trigger","triggerButtonProps","style","padding","title","onOk","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","cutoffFormat","onChange","label","eventId","value","resultType"],"sources":["/app/WcaOnRails/app/webpacker/components/EditEvents/Modals/EditCutoffModal/index.js"],"sourcesContent":["import React, { useState } from 'react';\nimport _ from 'lodash';\nimport { Label } from 'semantic-ui-react';\nimport { formats } from '../../../../lib/wca-data.js.erb';\nimport useInputState from '../../../../lib/hooks/useInputState';\nimport { roundIdToString } from '../../../../lib/utils/wcif';\nimport { roundCutoffToString } from '../../utils';\nimport ButtonActivatedModal from '../ButtonActivatedModal';\nimport CutoffFormatField from './CutoffFormatInput';\nimport { useDispatch } from '../../../../lib/providers/StoreProvider';\nimport { updateCutoff } from '../../store/actions';\nimport AttemptResultField from '../../../Results/WCALive/AttemptResultField/AttemptResultField';\nimport MbldPointsField from '../../../Results/WCALive/AttemptResultField/MbldPointsField';\n\n/**\n * Developer notes: \"cutoffFormat\" and \"NumberOfAttempts\" is used interchangeably for written clarity\n * A cutoff is made up of a number of attempts and a format.\n * This format is essentially a \"number of attempts\"\n * The cutoff format is stored as \"cutoff.numberOfAttempts\" in the round object in the wcif.\n */\n\n/**\n * Shows a modal to edit the cutoff of a round.\n * @param {Event} wcifEvent\n * @param {Round} wcifRound\n * @returns {React.ReactElement}\n */\nexport default function EditCutoffModal({ wcifEvent, wcifRound, disabled }) {\n  const { cutoff, format } = wcifRound;\n  const dispatch = useDispatch();\n\n  const [numberOfAttempts, setNumberOfAttempts] = useInputState(cutoff?.numberOfAttempts ?? 0);\n  const [attemptResult, setAttemptResult] = useState(cutoff?.attemptResult ?? 0);\n\n  const cutoffFormats = formats.byId[format].allowedFirstPhaseFormats;\n\n  const explanationText = (\n    numberOfAttempts > 0 ? roundCutoffToString({\n      ...wcifRound,\n      ...{ numberOfAttempts, attemptResult },\n    }) : null\n  );\n\n  const hasUnsavedChanges = () => (\n    !_.isEqual(cutoff, numberOfAttempts\n      ? { numberOfAttempts, attemptResult }\n      : null)\n  );\n\n  const reset = () => {\n    setNumberOfAttempts(cutoff?.numberOfAttempts ?? 0);\n    setAttemptResult(cutoff?.attemptResult ?? 0);\n  };\n\n  const handleOk = () => {\n    if (hasUnsavedChanges()) {\n      dispatch(updateCutoff(wcifRound.id, numberOfAttempts\n        ? { numberOfAttempts, attemptResult }\n        : null));\n    }\n  };\n\n  const Title = `Cutoff for ${roundIdToString(wcifRound.id)}`;\n  const Trigger = roundCutoffToString(wcifRound, { short: true });\n\n  return (\n    <ButtonActivatedModal\n      trigger={Trigger}\n      triggerButtonProps={{\n        style: {\n          padding: '0.5em 1em',\n        },\n      }}\n      title={Title}\n      reset={reset}\n      onOk={handleOk}\n      hasUnsavedChanges={hasUnsavedChanges()}\n      disabled={disabled}\n    >\n      <CutoffFormatField\n        cutoffFormats={cutoffFormats}\n        cutoffFormat={numberOfAttempts}\n        wcifRound={wcifRound}\n        onChange={setNumberOfAttempts}\n      />\n      {\n        numberOfAttempts > 0 && (\n          wcifEvent.id === '333mbf'\n            ? <MbldPointsField\n                label={<Label>Cutoff Result</Label>}\n                eventId={wcifEvent.id}\n                value={attemptResult}\n                onChange={setAttemptResult}\n              />\n            : <AttemptResultField\n                label={<Label>Cutoff Result</Label>}\n                eventId={wcifEvent.id}\n                value={attemptResult}\n                onChange={setAttemptResult}\n                resultType=\"single\"\n            />\n        )\n      }\n\n      {numberOfAttempts < 0 && <p>{explanationText}</p>}\n    </ButtonActivatedModal>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}