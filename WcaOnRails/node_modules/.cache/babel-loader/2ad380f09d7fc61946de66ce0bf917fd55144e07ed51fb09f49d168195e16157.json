{"ast":null,"code":"import _flatMap from \"lodash/flatMap\";\nimport _compact from \"lodash/compact\";\nimport _isEqual from \"lodash/isEqual\";\nvar _jsxFileName = \"/app/WcaOnRails/app/webpacker/components/EditEvents/Modals/EditTimeLimitModal/SelectRoundsModal.js\";\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nimport React, { useMemo, useState } from 'react';\nimport { Checkbox, Form, Popup } from 'semantic-ui-react';\nimport { events } from \"../../../../lib/wca-data.js.erb\";\nimport { useStore } from \"../../../../lib/providers/StoreProvider\";\nimport { parseActivityCode, roundIdToString } from \"../../../../lib/utils/wcif\";\nimport ButtonActivatedModal from \"../ButtonActivatedModal\";\nexport default function SelectRoundsModal(_ref) {\n  var _this = this;\n  var timeLimit = _ref.timeLimit,\n    excludeEventId = _ref.excludeEventId,\n    onOk = _ref.onOk;\n  var _useStore = useStore(),\n    wcifEvents = _useStore.wcifEvents;\n  var _useState = useState(timeLimit.cumulativeRoundIds),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedRoundIds = _useState2[0],\n    setSelectedRoundIds = _useState2[1];\n  var Title = useMemo(function () {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 5\n      }\n    }, \"Choose rounds for cumulative time limit\");\n  }, []);\n  var Trigger = useMemo(function () {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 5\n      }\n    }, \"Share with other rounds\");\n  }, []);\n  var handleOk = function handleOk() {\n    return onOk(selectedRoundIds);\n  };\n  var reset = function reset() {\n    var _timeLimit$cumulative;\n    setSelectedRoundIds((_timeLimit$cumulative = timeLimit === null || timeLimit === void 0 ? void 0 : timeLimit.cumulativeRoundId) !== null && _timeLimit$cumulative !== void 0 ? _timeLimit$cumulative : []);\n  };\n  var hasUnsavedChanges = function hasUnsavedChanges() {\n    return !_isEqual(selectedRoundIds, timeLimit.cumulativeRoundIds);\n  };\n  var wcifRounds = _compact(_flatMap(wcifEvents, function (wcifEvent) {\n    // Cross round cumulative time limits may not include other rounds of\n    // the same event.\n    // See https://github.com/thewca/wca-regulations/issues/457.\n    var otherEvent = events.byId[wcifEvent.id];\n    if (!otherEvent.canChangeTimeLimit || excludeEventId === wcifEvent.id) {\n      return [];\n    }\n    return wcifEvent.rounds;\n  }));\n  var handleChecked = function handleChecked(_ev, data) {\n    if (data.disabled) {\n      return;\n    }\n    if (data.checked) {\n      setSelectedRoundIds([].concat(_toConsumableArray(selectedRoundIds), [data.value]));\n    } else {\n      setSelectedRoundIds(selectedRoundIds.filter(function (roundId) {\n        return roundId !== data.value;\n      }));\n    }\n  };\n  return /*#__PURE__*/React.createElement(ButtonActivatedModal, {\n    title: Title,\n    trigger: Trigger,\n    hasUnsavedChanges: hasUnsavedChanges(),\n    onOk: handleOk,\n    reset: reset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, wcifRounds.map(function (wcifRound) {\n    var roundId = wcifRound.id;\n    var _parseActivityCode = parseActivityCode(roundId),\n      eventId = _parseActivityCode.eventId;\n    var event = events.byId[eventId];\n    var checked = selectedRoundIds.indexOf(roundId) > -1;\n    var eventAlreadySelected = !!selectedRoundIds.find(function (selectedRoundId) {\n      return parseActivityCode(selectedRoundId).eventId === eventId;\n    });\n    var disabled = !checked && eventAlreadySelected;\n    var disabledReason = disabled ? \"Cannot select this round because you've already selected a round with \".concat(event.name) : null;\n    return /*#__PURE__*/React.createElement(Form.Field, {\n      key: roundId,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Popup, {\n      content: disabledReason,\n      disabled: !disabled,\n      position: \"right center\",\n      trigger: /*#__PURE__*/React.createElement(Checkbox, {\n        name: \"round-id-radio-group\",\n        label: roundIdToString(roundId),\n        value: roundId,\n        checked: checked,\n        onClick: handleChecked,\n        disabled: disabled,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }));\n  }));\n}","map":{"version":3,"names":["React","useMemo","useState","Checkbox","Form","Popup","events","useStore","parseActivityCode","roundIdToString","ButtonActivatedModal","SelectRoundsModal","_ref","_this","timeLimit","excludeEventId","onOk","_useStore","wcifEvents","_useState","cumulativeRoundIds","_useState2","_slicedToArray","selectedRoundIds","setSelectedRoundIds","Title","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Trigger","handleOk","reset","_timeLimit$cumulative","cumulativeRoundId","hasUnsavedChanges","_isEqual","wcifRounds","_compact","_flatMap","wcifEvent","otherEvent","byId","id","canChangeTimeLimit","rounds","handleChecked","_ev","data","disabled","checked","concat","_toConsumableArray","value","filter","roundId","title","trigger","map","wcifRound","_parseActivityCode","eventId","event","indexOf","eventAlreadySelected","find","selectedRoundId","disabledReason","name","Field","key","content","position","label","onClick"],"sources":["/app/WcaOnRails/app/webpacker/components/EditEvents/Modals/EditTimeLimitModal/SelectRoundsModal.js"],"sourcesContent":["import _ from 'lodash';\nimport React, { useMemo, useState } from 'react';\nimport { Checkbox, Form, Popup } from 'semantic-ui-react';\nimport { events } from '../../../../lib/wca-data.js.erb';\nimport { useStore } from '../../../../lib/providers/StoreProvider';\nimport { parseActivityCode, roundIdToString } from '../../../../lib/utils/wcif';\nimport ButtonActivatedModal from '../ButtonActivatedModal';\n\nexport default function SelectRoundsModal({ timeLimit, excludeEventId, onOk }) {\n  const { wcifEvents } = useStore();\n  const [selectedRoundIds, setSelectedRoundIds] = useState(timeLimit.cumulativeRoundIds);\n\n  const Title = useMemo(() => (\n    <span>\n      Choose rounds for cumulative time limit\n    </span>\n  ), []);\n\n  const Trigger = useMemo(() => (\n    <span>\n      Share with other rounds\n    </span>\n  ), []);\n\n  const handleOk = () => onOk(selectedRoundIds);\n\n  const reset = () => {\n    setSelectedRoundIds(timeLimit?.cumulativeRoundId ?? []);\n  };\n\n  const hasUnsavedChanges = () => !_.isEqual(selectedRoundIds, timeLimit.cumulativeRoundIds);\n\n  const wcifRounds = _.compact(_.flatMap(wcifEvents, (wcifEvent) => {\n    // Cross round cumulative time limits may not include other rounds of\n    // the same event.\n    // See https://github.com/thewca/wca-regulations/issues/457.\n    const otherEvent = events.byId[wcifEvent.id];\n    if (!otherEvent.canChangeTimeLimit || excludeEventId === wcifEvent.id) {\n      return [];\n    }\n    return wcifEvent.rounds;\n  }));\n\n  const handleChecked = (_ev, data) => {\n    if (data.disabled) {\n      return;\n    }\n\n    if (data.checked) {\n      setSelectedRoundIds([...selectedRoundIds, data.value]);\n    } else {\n      setSelectedRoundIds(selectedRoundIds.filter((roundId) => roundId !== data.value));\n    }\n  };\n\n  return (\n    <ButtonActivatedModal\n      title={Title}\n      trigger={Trigger}\n      hasUnsavedChanges={hasUnsavedChanges()}\n      onOk={handleOk}\n      reset={reset}\n    >\n      {wcifRounds.map((wcifRound) => {\n        const roundId = wcifRound.id;\n        const { eventId } = parseActivityCode(roundId);\n        const event = events.byId[eventId];\n        const checked = selectedRoundIds.indexOf(roundId) > -1;\n\n        const eventAlreadySelected = !!selectedRoundIds.find((selectedRoundId) => (\n          parseActivityCode(selectedRoundId).eventId === eventId\n        ));\n\n        const disabled = !checked && eventAlreadySelected;\n        const disabledReason = disabled ? `Cannot select this round because you've already selected a round with ${event.name}` : null;\n\n        return (\n          <Form.Field key={roundId}>\n            <Popup\n              content={disabledReason}\n              disabled={!disabled}\n              position=\"right center\"\n              trigger={(\n                <Checkbox\n                  name=\"round-id-radio-group\"\n                  label={roundIdToString(roundId)}\n                  value={roundId}\n                  checked={checked}\n                  onClick={handleChecked}\n                  disabled={disabled}\n                />\n              )}\n            />\n          </Form.Field>\n        );\n      })}\n    </ButtonActivatedModal>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}