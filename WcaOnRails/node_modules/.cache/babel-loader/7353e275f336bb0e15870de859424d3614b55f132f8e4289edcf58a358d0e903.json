{"ast":null,"code":"import { useEffect } from 'react';\nimport { useInfiniteQuery } from '@tanstack/react-query';\nimport { apiV0Urls, WCA_API_PAGINATION } from \"../../lib/requests/routes.js.erb\";\nimport { fetchJsonOrError } from \"../../lib/requests/fetchWithAuthenticityToken\";\nvar useDelegatesData = function useDelegatesData() {\n  var _useInfiniteQuery = useInfiniteQuery({\n      queryKey: ['delegates'],\n      queryFn: function queryFn(_ref) {\n        var _ref$pageParam = _ref.pageParam,\n          pageParam = _ref$pageParam === void 0 ? 1 : _ref$pageParam;\n        return fetchJsonOrError(\"\".concat(apiV0Urls.delegates.list, \"?page=\").concat(pageParam));\n      },\n      getNextPageParam: function getNextPageParam(previousPage, allPages) {\n        // Continue until less than a full page of data is fetched,\n        // which indicates the very last page.\n        if (previousPage.data.length < WCA_API_PAGINATION) {\n          return undefined;\n        }\n        return allPages.length + 1;\n      }\n    }),\n    data = _useInfiniteQuery.data,\n    fetchNextPage = _useInfiniteQuery.fetchNextPage,\n    hasNextPage = _useInfiniteQuery.hasNextPage;\n  useEffect(function () {\n    if (hasNextPage) {\n      fetchNextPage();\n    }\n  }, [data, hasNextPage, fetchNextPage]);\n  var delegatesData = data === null || data === void 0 ? void 0 : data.pages.flatMap(function (page) {\n    return page.data;\n  });\n  return delegatesData;\n};\nexport default useDelegatesData;","map":{"version":3,"names":["useEffect","useInfiniteQuery","apiV0Urls","WCA_API_PAGINATION","fetchJsonOrError","useDelegatesData","_useInfiniteQuery","queryKey","queryFn","_ref","_ref$pageParam","pageParam","concat","delegates","list","getNextPageParam","previousPage","allPages","data","length","undefined","fetchNextPage","hasNextPage","delegatesData","pages","flatMap","page"],"sources":["/app/WcaOnRails/app/webpacker/components/CompetitionsOverview/useDelegatesData.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { useInfiniteQuery } from '@tanstack/react-query';\n\nimport { apiV0Urls, WCA_API_PAGINATION } from '../../lib/requests/routes.js.erb';\nimport { fetchJsonOrError } from '../../lib/requests/fetchWithAuthenticityToken';\n\nconst useDelegatesData = () => {\n  const {\n    data,\n    fetchNextPage,\n    hasNextPage,\n  } = useInfiniteQuery({\n    queryKey: ['delegates'],\n    queryFn: ({ pageParam = 1 }) => fetchJsonOrError(`${apiV0Urls.delegates.list}?page=${pageParam}`),\n    getNextPageParam: (previousPage, allPages) => {\n      // Continue until less than a full page of data is fetched,\n      // which indicates the very last page.\n      if (previousPage.data.length < WCA_API_PAGINATION) {\n        return undefined;\n      }\n      return allPages.length + 1;\n    },\n  });\n\n  useEffect(() => {\n    if (hasNextPage) {\n      fetchNextPage();\n    }\n  }, [data, hasNextPage, fetchNextPage]);\n\n  const delegatesData = data?.pages.flatMap((page) => page.data);\n\n  return delegatesData;\n};\n\nexport default useDelegatesData;\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,gBAAgB,QAAQ,uBAAuB;AAExD,SAASC,SAAS,EAAEC,kBAAkB;AACtC,SAASC,gBAAgB;AAEzB,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAA,EAAS;EAC7B,IAAAC,iBAAA,GAIIL,gBAAgB,CAAC;MACnBM,QAAQ,EAAE,CAAC,WAAW,CAAC;MACvBC,OAAO,EAAE,SAAAA,QAAAC,IAAA;QAAA,IAAAC,cAAA,GAAAD,IAAA,CAAGE,SAAS;UAATA,SAAS,GAAAD,cAAA,cAAG,CAAC,GAAAA,cAAA;QAAA,OAAON,gBAAgB,IAAAQ,MAAA,CAAIV,SAAS,CAACW,SAAS,CAACC,IAAI,YAAAF,MAAA,CAASD,SAAS,CAAE,CAAC;MAAA;MACjGI,gBAAgB,EAAE,SAAAA,iBAACC,YAAY,EAAEC,QAAQ,EAAK;QAC5C;QACA;QACA,IAAID,YAAY,CAACE,IAAI,CAACC,MAAM,GAAGhB,kBAAkB,EAAE;UACjD,OAAOiB,SAAS;QAClB;QACA,OAAOH,QAAQ,CAACE,MAAM,GAAG,CAAC;MAC5B;IACF,CAAC,CAAC;IAdAD,IAAI,GAAAZ,iBAAA,CAAJY,IAAI;IACJG,aAAa,GAAAf,iBAAA,CAAbe,aAAa;IACbC,WAAW,GAAAhB,iBAAA,CAAXgB,WAAW;EAcbtB,SAAS,CAAC,YAAM;IACd,IAAIsB,WAAW,EAAE;MACfD,aAAa,CAAC,CAAC;IACjB;EACF,CAAC,EAAE,CAACH,IAAI,EAAEI,WAAW,EAAED,aAAa,CAAC,CAAC;EAEtC,IAAME,aAAa,GAAGL,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEM,KAAK,CAACC,OAAO,CAAC,UAACC,IAAI;IAAA,OAAKA,IAAI,CAACR,IAAI;EAAA,EAAC;EAE9D,OAAOK,aAAa;AACtB,CAAC;AAED,eAAelB,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}