{"ast":null,"code":"import _without from \"lodash/without\";\nvar _jsxFileName = \"/app/WcaOnRails/app/webpacker/components/EditEvents/Modals/EditTimeLimitModal/TimeLimitDescription.js\";\nimport React from 'react';\nimport { centisecondsToString } from \"../../../../lib/utils/edit-events\";\nimport { roundIdToString } from \"../../../../lib/utils/wcif\";\nimport SelectRoundsModal from \"./SelectRoundsModal\";\nfunction RegulationLink(_ref) {\n  var regulation = _ref.regulation;\n  return /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, \"regulation\", ' ', /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://www.worldcubeassociation.org/regulations/#\".concat(regulation),\n    target: \"_blank\",\n    rel: \"noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, regulation));\n}\nfunction GuidelineLink(_ref2) {\n  var guideline = _ref2.guideline;\n  return /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, \"guideline\", ' ', /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://www.worldcubeassociation.org/regulations/guidelines.html#\".concat(guideline),\n    target: \"_blank\",\n    rel: \"noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, guideline));\n}\nexport default function TimeLimitDescription(_ref3) {\n  var _this = this;\n  var wcifRound = _ref3.wcifRound,\n    timeLimit = _ref3.timeLimit,\n    onOk = _ref3.onOk;\n  if (timeLimit.cumulativeRoundIds.length === 0) {\n    return \"Competitors have \".concat(centisecondsToString(timeLimit.centiseconds), \" for each of their solves.\");\n  }\n  if (timeLimit.cumulativeRoundIds.length === 1) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, \"Competitors have\", ' ', centisecondsToString(timeLimit.centiseconds), ' ', \"total for all of their solves in this round.\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }), \"This is called a cumulative time limit (see\", /*#__PURE__*/React.createElement(RegulationLink, {\n      regulation: \"A1a2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }), \").\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }), \"The button below allows you to share this cumulative time limit with other rounds (see\", /*#__PURE__*/React.createElement(GuidelineLink, {\n      guideline: \"A1a2++\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }), \").\"), /*#__PURE__*/React.createElement(SelectRoundsModal, {\n      excludeEventId: wcifRound.id.split('-')[0],\n      timeLimit: timeLimit,\n      onOk: onOk,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }));\n  }\n  var otherSelectedRoundIds = _without(timeLimit.cumulativeRoundIds, wcifRound.id);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, \"This round has a cross round cumulative time limit (see\", ' ', /*#__PURE__*/React.createElement(GuidelineLink, {\n    guideline: \"A1a2++\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }), \").\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }), \"This means that competitors have\", ' ', centisecondsToString(timeLimit.centiseconds), ' ', \"total for all of their solves in this round (\", roundIdToString(wcifRound.id), \") shared with:\", /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, otherSelectedRoundIds.map(function (roundId) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: roundId,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, roundIdToString(roundId));\n  }))), /*#__PURE__*/React.createElement(SelectRoundsModal, {\n    excludeEventId: wcifRound.id.split('-')[0],\n    timeLimit: timeLimit,\n    onOk: onOk,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"names":["React","centisecondsToString","roundIdToString","SelectRoundsModal","RegulationLink","_ref","regulation","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","href","concat","target","rel","GuidelineLink","_ref2","guideline","TimeLimitDescription","_ref3","_this","wcifRound","timeLimit","onOk","cumulativeRoundIds","length","centiseconds","Fragment","excludeEventId","id","split","otherSelectedRoundIds","_without","map","roundId","key"],"sources":["/app/WcaOnRails/app/webpacker/components/EditEvents/Modals/EditTimeLimitModal/TimeLimitDescription.js"],"sourcesContent":["import _ from 'lodash';\nimport React from 'react';\nimport { centisecondsToString } from '../../../../lib/utils/edit-events';\nimport { roundIdToString } from '../../../../lib/utils/wcif';\nimport SelectRoundsModal from './SelectRoundsModal';\n\nfunction RegulationLink({ regulation }) {\n  return (\n    <span>\n      regulation\n      {' '}\n      <a href={`https://www.worldcubeassociation.org/regulations/#${regulation}`} target=\"_blank\" rel=\"noreferrer\">\n        {regulation}\n      </a>\n    </span>\n  );\n}\n\nfunction GuidelineLink({ guideline }) {\n  return (\n    <span>\n      guideline\n      {' '}\n      <a href={`https://www.worldcubeassociation.org/regulations/guidelines.html#${guideline}`} target=\"_blank\" rel=\"noreferrer\">\n        {guideline}\n      </a>\n    </span>\n  );\n}\n\nexport default function TimeLimitDescription({ wcifRound, timeLimit, onOk }) {\n  if (timeLimit.cumulativeRoundIds.length === 0) {\n    return `Competitors have ${centisecondsToString(timeLimit.centiseconds)} for each of their solves.`;\n  }\n\n  if (timeLimit.cumulativeRoundIds.length === 1) {\n    return (\n      <>\n        <span>\n          Competitors have\n          {' '}\n          {centisecondsToString(timeLimit.centiseconds)}\n          {' '}\n          total for all of their solves in this round.\n          <br />\n          This is called a cumulative time limit (see\n          <RegulationLink regulation=\"A1a2\" />\n          ).\n          <br />\n          The button below allows you to share this cumulative time limit with other rounds (see\n          <GuidelineLink guideline=\"A1a2++\" />\n          ).\n        </span>\n        <SelectRoundsModal excludeEventId={wcifRound.id.split('-')[0]} timeLimit={timeLimit} onOk={onOk} />\n      </>\n    );\n  }\n\n  const otherSelectedRoundIds = _.without(timeLimit.cumulativeRoundIds, wcifRound.id);\n\n  return (\n    <>\n      <span>\n        This round has a cross round cumulative time limit (see\n        {' '}\n        <GuidelineLink guideline=\"A1a2++\" />\n        ).\n        <br />\n        This means that competitors have\n        {' '}\n        {centisecondsToString(timeLimit.centiseconds)}\n        {' '}\n        total for all of their solves in this round (\n        {roundIdToString(wcifRound.id)}\n        ) shared with:\n        <ul>\n          {otherSelectedRoundIds.map((roundId) => (\n            <li key={roundId}>{roundIdToString(roundId)}</li>\n          ))}\n        </ul>\n      </span>\n      <SelectRoundsModal excludeEventId={wcifRound.id.split('-')[0]} timeLimit={timeLimit} onOk={onOk} />\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}